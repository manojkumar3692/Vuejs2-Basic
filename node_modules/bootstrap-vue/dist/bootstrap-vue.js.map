{"version":3,"file":"bootstrap-vue.js","sources":["../lib/utils/observe-dom.js","../lib/directives/_target.js","../lib/directives/scrollspy.js","../lib/components/alert.vue","../lib/mixins/link.js","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-toolbar.vue","../lib/components/button-group.vue","../lib/mixins/clickout.js","../lib/mixins/dropdown.js","../lib/components/button-group-dropdown.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/mixins/generate-id.js","../lib/components/form-checkbox.vue","../lib/mixins/form-options.js","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/modal.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/pagination.vue","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["/**\r\n * Observe a DOM element changes, falls back to eventListener mode\r\n * @param {Element} el The DOM element to observe\r\n * @param {Function} callback callback to be called on change\r\n * @param {object} [opts={childList: true, subtree: true}] observe options\r\n * @see http://stackoverflow.com/questions/3219758\r\n */\r\nexport default function observeDOM(el, callback, opts) {\r\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\r\n    const eventListenerSupported = window.addEventListener;\r\n\r\n    if (MutationObserver) {\r\n        // Define a new observer\r\n        const obs = new MutationObserver(mutations => {\r\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n        // Have the observer observe foo for changes in children\r\n        obs.observe(el, Object.assign({childList: true, subtree: true}, opts));\r\n    } else if (eventListenerSupported) {\r\n        el.addEventListener('DOMNodeInserted', callback, false);\r\n        el.addEventListener('DOMNodeRemoved', callback, false);\r\n    }\r\n}\r\n","const all_listen_types = {hover: true, click: true, focus: true};\r\n\r\nexport default function targets(el, binding, listen_types, fn) {\r\n    const vm = el.__vue__;\r\n\r\n    if (!vm) {\r\n        console.warn('__vue__ is not available on element', el);\r\n        return;\r\n    }\r\n\r\n    const targets = Object.keys(binding.modifiers || {})\r\n        .filter(t => !all_listen_types[t]);\r\n\r\n    if (binding.value) {\r\n        targets.push(binding.value);\r\n    }\r\n\r\n    const listener = () => {\r\n        fn({targets, vm});\r\n    };\r\n\r\n    Object.keys(all_listen_types).forEach(type => {\r\n        if (listen_types[type] || binding.modifiers[type]) {\r\n            el.addEventListener(type, listener);\r\n        }\r\n    });\r\n}\r\n","const inBrowser = typeof window !== 'undefined';\r\nconst isServer = !inBrowser;\r\n\r\n/*\r\n * Pollyfill for Element.closest() for IE :(\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\r\n */\r\n\r\nif (inBrowser && window.Element && !Element.prototype.closest) {\r\n    Element.prototype.closest = function (s) {\r\n        const matches = (this.document || this.ownerDocument).querySelectorAll(s);\r\n        let el = this;\r\n        let i;\r\n        do {\r\n            i = matches.length;\r\n            // eslint-disable-next-line no-empty\r\n            while (--i >= 0 && matches.item(i) !== el) {\r\n            }\r\n        } while ((i < 0) && (el = el.parentElement));\r\n        return el;\r\n    };\r\n}\r\n\r\n/*\r\n * Constants / Defaults\r\n */\r\n\r\nconst NAME = 'v-b-scrollspy';\r\nconst EVENT = 'scrollspy::activate';\r\nconst BVSS = '__BV_ScrollSpy__';\r\n\r\nconst Default = {\r\n    element: 'body',\r\n    offset: 10,\r\n    method: 'auto',\r\n    throttle: 200\r\n};\r\n\r\nconst DefaultType = {\r\n    element: '(string|element)',\r\n    offset: 'number',\r\n    method: 'string',\r\n    throttle: 'number'\r\n};\r\n\r\nconst ClassName = {\r\n    DROPDOWN_ITEM: 'dropdown-item',\r\n    DROPDOWN_MENU: 'dropdown-menu',\r\n    DROPDOWN_TOGGLE: 'dropdown-toggle',\r\n    NAV_LINK: 'nav-link',\r\n    LIST_ITEM: 'list-group-item',\r\n    ACTIVE: 'active'\r\n};\r\n\r\nconst Selector = {\r\n    ACTIVE: '.active',\r\n    NAV_LIST_GROUP: '.nav, .list-group',\r\n    NAV: '.nav',\r\n    LIST_GROUP: '.list-group',\r\n    NAV_LINKS: '.nav-link',\r\n    LIST_ITEMS: '.list-group-item',\r\n    DROPDOWN: '.dropdown',\r\n    DROPDOWN_ITEMS: '.dropdown-item',\r\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\r\n};\r\n\r\nconst OffsetMethod = {\r\n    OFFSET: 'offset',\r\n    POSITION: 'position'\r\n};\r\n\r\n/*\r\n * DOM Utility Methods\r\n */\r\n\r\nfunction isElement(obj) {\r\n    return obj.nodeType;\r\n}\r\n\r\n// Wrapper for Element.closest to emulate jQuery's closest (sorta)\r\nfunction closest(element, selector) {\r\n    const el = element.closest(selector);\r\n    return el === element ? null : el;\r\n}\r\n\r\n// Query Selector All wrapper\r\nfunction $QSA(selector, element) {\r\n    if (!element) {\r\n        element = document;\r\n    }\r\n    if (!isElement(element)) {\r\n        return [];\r\n    }\r\n    return Array.prototype.slice.call(element.querySelectorAll(selector));\r\n}\r\n\r\n// Query Selector wrapper\r\nfunction $QS(selector, element) {\r\n    if (!element) {\r\n        element = document;\r\n    }\r\n    if (!isElement(element)) {\r\n        return null;\r\n    }\r\n    return element.querySelector(selector) || null;\r\n}\r\n\r\n/*\r\n * Utility Methods\r\n */\r\n\r\n// Get Vue VM from element\r\nfunction getVm(el) {\r\n    return el ? el.__vue__ : null;\r\n}\r\n\r\n// Better var type detection\r\nfunction toType(obj) {\r\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\r\n}\r\n\r\n// Check config properties for expected types\r\nfunction typeCheckConfig(componentName, config, configTypes) {\r\n    for (const property in configTypes) {\r\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\r\n            const expectedTypes = configTypes[property];\r\n            const value = config[property];\r\n            const valueType = value && isElement(value) ? 'element' : toType(value);\r\n\r\n            if (!new RegExp(expectedTypes).test(valueType)) {\r\n                console.error(\r\n                    componentName + ': Option \"' + property + '\" provided type \"' +\r\n                    valueType + '\" but expected type \"' + expectedTypes + '\"'\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\n * ScrollSpy Class\r\n */\r\n\r\nfunction ScrollSpy(el, binding) {\r\n    // The element that contains the nav-links et al\r\n    this._$el = el;\r\n    // The selectors to find the nav-links\r\n    this._selector = [\r\n        Selector.NAV_LINKS,\r\n        Selector.LIST_ITEMS,\r\n        Selector.DROPDOWN_ITEMS\r\n    ].join(',');\r\n    // Start off with default configurtion\r\n    this._config = Object.assign({}, Default);\r\n    // Target HREF IDs and their offsets\r\n    this._offsets = [];\r\n    this._targets = [];\r\n    // The currently active target (as an HREF id)\r\n    this._activeTarget = null;\r\n    // Curent scroll height (for detecting document height changes)\r\n    this._scrollHeight = 0;\r\n    // Reference to the $root VM so we can spew events\r\n    this._$root = null;\r\n    // Reference to our throttled resize timeout\r\n    this._resizeTimeout = null;\r\n\r\n    // Process bindings/config\r\n    this.updateConfig(binding);\r\n}\r\n\r\n/*\r\n * ScrollSpy Public methods\r\n */\r\n\r\n// Update config\r\nScrollSpy.prototype.updateConfig = function (binding) {\r\n    // If Argument, assume element ID\r\n    if (binding.arg) {\r\n        // Element ID specified as arg. We must pre-pend #\r\n        this._config.element = '#' + binding.arg;\r\n    }\r\n\r\n    // Process modifiers\r\n    Object.keys(binding.modifiers).forEach(val => {\r\n        if (/^\\d+$/.test(val)) {\r\n            // Offest value\r\n            this._config.offset = parseInt(val, 10);\r\n        } else if (/^(auto|position|offset)$/.test(val)) {\r\n            // Offset method\r\n            this._config.method = val;\r\n        }\r\n    });\r\n\r\n    // Process value\r\n    if (typeof binding.value === 'string') {\r\n        // Value is  a CSS ID or selector\r\n        this._config.element = binding.value;\r\n    } else if (typeof binding.value === 'number') {\r\n        // Value is offset\r\n        this._config.offset = Math.round(binding.value);\r\n    } else if (typeof binding.value === 'object') {\r\n        // Value is config object\r\n        Object.keys(binding.value).filter(k => Boolean(DefaultType[k])).forEach(k => {\r\n            this._config[k] = binding.value[k];\r\n        });\r\n    }\r\n\r\n    // Check the config and log error to console. Unknown options are ignored\r\n    typeCheckConfig(NAME, this._config, DefaultType);\r\n\r\n    // Get Vue instance from element\r\n    const vm = getVm(this._$el);\r\n    if (vm && vm.$root) {\r\n        this._$root = vm.$root;\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Turn on event listener\r\nScrollSpy.prototype.listen = function () {\r\n    const scroller = this._getScroller();\r\n    if (scroller) {\r\n        if (scroller.tagName !== 'BODY') {\r\n            scroller.addEventListener('scroll', this, false);\r\n        }\r\n        window.addEventListener('scroll', this, false);\r\n        window.addEventListener('orientationchange', this, false);\r\n        window.addEventListener('resize', this, false);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Turn off event listener\r\nScrollSpy.prototype.unListen = function () {\r\n    const scroller = this._getScroller();\r\n    if (scroller) {\r\n        if (scroller.tagName !== 'BODY') {\r\n            scroller.removeEventListener('scroll', this, false);\r\n        }\r\n        window.removeEventListener('scroll', this, false);\r\n        window.removeEventListener('orientationchange', this, false);\r\n        window.removeEventListener('resize', this, false);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Refresh the positions of the target IDs\r\nScrollSpy.prototype.refresh = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return this;\r\n    }\r\n\r\n    const autoMethod = scroller.tagName === 'BODY' ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\r\n    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\r\n    const offsetBase = offsetMethod === OffsetMethod.OFFSET ? 0 : this._getScrollTop();\r\n\r\n    this._offsets = [];\r\n    this._targets = [];\r\n    this._scrollHeight = this._getScrollHeight();\r\n\r\n    // Find all nav link/dropdown/list-item links in our element\r\n    $QSA(this._selector, this._$el).map(el => {\r\n        const href = el.getAttribute('href');\r\n        if (href && href.charAt(0) === '#' && href !== '#' && href.indexOf('#/') === -1) {\r\n            const target = $QS(href, scroller);\r\n            if (!target) {\r\n                return null;\r\n            }\r\n            const bcr = target.getBoundingClientRect();\r\n            if (bcr.width || bcr.height) {\r\n                return {\r\n                    offset: (offsetMethod === OffsetMethod.OFFSET ? bcr.top : target.offsetTop) + offsetBase,\r\n                    href\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }).filter(\r\n        item => item\r\n    ).sort(\r\n        (a, b) => a.offset - b.offset\r\n    ).forEach(item => {\r\n        this._offsets.push(item.offset);\r\n        this._targets.push(item.href);\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\n// Handle the active target selection\r\nScrollSpy.prototype.process = function () {\r\n    if (!this._getScroller) {\r\n        return this;\r\n    }\r\n    const scrollTop = this._getScrollTop() + this._config.offset;\r\n    const scrollHeight = this._getScrollHeight();\r\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\r\n\r\n    if (this._scrollHeight !== scrollHeight) {\r\n        this.refresh();\r\n    }\r\n\r\n    if (scrollTop >= maxScroll) {\r\n        const target = this._targets[this._targets.length - 1];\r\n        if (this._activeTarget !== target) {\r\n            this._activate(target);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\r\n        this._activeTarget = null;\r\n        this._clear();\r\n        return this;\r\n    }\r\n\r\n    for (let i = this._offsets.length; i--;) {\r\n        const isActiveTarget =\r\n            this._activeTarget !== this._targets[i] &&\r\n            scrollTop >= this._offsets[i] &&\r\n            (this._offsets[i + 1] === undefined ||\r\n            scrollTop < this._offsets[i + 1]);\r\n\r\n        if (isActiveTarget) {\r\n            this._activate(this._targets[i]);\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// Dispose  of our stuff\r\nScrollSpy.prototype.dispose = function () {\r\n    // Ensure we are not listening to events\r\n    this.unListen();\r\n\r\n    // Garbage collection\r\n    clearTimeout(this._resizeTimeout);\r\n    this._resizeTimeout = null;\r\n    this._$el = null;\r\n    this._config = null;\r\n    this._selector = null;\r\n    this._offsets = null;\r\n    this._targets = null;\r\n    this._activeTarget = null;\r\n    this._scrollHeight = null;\r\n    this._$root = null;\r\n};\r\n\r\n/*\r\n * ScrollSpy event handler\r\n */\r\n\r\nScrollSpy.prototype.handleEvent = function (e) {\r\n    const self = this;\r\n\r\n    function resizeThrottle() {\r\n        clearTimeout(this._resizeTimeout);\r\n        this._resizeTimeout = setTimeout(() => {\r\n            self.refresh().process();\r\n        }, self._config.throttle || Default.throttle);\r\n    }\r\n\r\n    if (e.type === 'scroll') {\r\n        this.process();\r\n    } else if (e.type === 'orientationchange') {\r\n        this.refresh().process();\r\n    } else if (e.type === 'resize') {\r\n        resizeThrottle();\r\n    }\r\n};\r\n\r\n/*\r\n * ScrollSpy private methods\r\n */\r\n\r\n// Get the srolling element\r\nScrollSpy.prototype._getScroller = function () {\r\n    if (isServer) {\r\n        return null;\r\n    }\r\n    const scroller = this._config.element;\r\n    if (!scroller) {\r\n        return null;\r\n    }\r\n    if (scroller && isElement(scroller)) {\r\n        return scroller;\r\n    } else if (typeof scroller === 'string') {\r\n        if (scroller === 'body') {\r\n            return document.body;\r\n        }\r\n        // Otherwise assume CSS selector\r\n        return $QS(scroller);\r\n    }\r\n    return null;\r\n};\r\n\r\n// Return the scroller top position\r\nScrollSpy.prototype._getScrollTop = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return 0;\r\n    }\r\n    return scroller.tagName === 'BODY' ? window.pageYOffset : scroller.scrollTop;\r\n};\r\n\r\n// Return the scroller height\r\nScrollSpy.prototype._getScrollHeight = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return 0;\r\n    }\r\n    return scroller.tagName === 'BODY' ?\r\n        Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) :\r\n        scroller.scrollHeight;\r\n};\r\n\r\n// Return the scroller offset top position\r\nScrollSpy.prototype._getOffsetHeight = function () {\r\n    const scroller = this._getScroller();\r\n    if (!scroller) {\r\n        return 0;\r\n    }\r\n    return scroller.tagName === 'BODY' ? window.innerHeight : scroller.getBoundingClientRect().height;\r\n};\r\n\r\n// Activate the scrolled in target nav-link\r\nScrollSpy.prototype._activate = function (target) {\r\n    this._activeTarget = target;\r\n    this._clear();\r\n\r\n    let queries = this._selector.split(',');\r\n    queries = queries.map(selector => {\r\n        return selector + '[href=\"' + target + '\"]';\r\n    });\r\n\r\n    const links = $QSA(queries.join(','), this._$el);\r\n\r\n    links.forEach(link => {\r\n        if (link.classList.contains(ClassName.DROPDOWN_ITEM)) {\r\n            // This is a dropdown item, so find the .dropdown-toggle and set it's state\r\n            const dropdown = closest(link, Selector.DROPDOWN);\r\n            if (dropdown) {\r\n                const toggle = $QS(Selector.DROPDOWN_TOGGLE, dropdown);\r\n                if (toggle) {\r\n                    this._setActiveState(toggle, true);\r\n                }\r\n            }\r\n            // Also set this link's state\r\n            this._setActiveState(link, true);\r\n        } else {\r\n            // Set triggered link as active\r\n            this._setActiveState(link, true);\r\n            // Set triggered links parents as active\r\n            // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\r\n            // Handle parent .nav's and .list-group's\r\n            this._setParentsSiblingActiveState(link, Selector.NAV_LIST_GROUP, [ClassName.NAV_LINK, ClassName.LIST_ITEM], true);\r\n        }\r\n    });\r\n\r\n    // Signal event to root, passing ID of target\r\n    if (links && links.length > 0 && this._$root && this._$root.$emit) {\r\n        this._$root.$emit(EVENT, target);\r\n    }\r\n};\r\n\r\n// Clear the 'active' targets in our nav component\r\nScrollSpy.prototype._clear = function () {\r\n    $QSA(this._selector, this._$el).filter(el => {\r\n        if (el.classList.contains(ClassName.ACTIVE)) {\r\n            const href = el.getAttribute('href');\r\n            if (href.charAt(0) !== '#' || href.indexOf('#/') === 0) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }).forEach(el => {\r\n        this._setActiveState(el, false);\r\n    });\r\n};\r\n\r\n// Set the active state. if el has a vue insatnce then try setting the active prop,\r\n// Else fallback to adding the active class\r\nScrollSpy.prototype._setActiveState = function (el, state) {\r\n    if (el) {\r\n        if (el.classList.contains(ClassName.NAV_LINK) && !el.classList.contains(ClassName.DROPDOWN_TOGGLE)) {\r\n            // Special case where VM with 'active' prop is on parent element\r\n            el = el.parentElement;\r\n        }\r\n        const vm = getVm(el);\r\n        if (vm && Object.prototype.hasOwnProperty.call(vm.$props, 'active')) {\r\n            // This is a component that has an `active` prop\r\n            vm.$props.active = state;\r\n        } else {\r\n            // Fallback to setting class attribute since item doesn't have an 'active' prop\r\n            el.classList[state ? 'add' : 'remove'](ClassName.ACTIVE);\r\n        }\r\n    }\r\n};\r\n\r\n// Find all the matching parents given a CSS selector, then find previous sibling that matches the supplied classes\r\n// And then set the active state on each immediate previous sibling of the parent(s)\r\nScrollSpy.prototype._setParentsSiblingActiveState = function (element, selector, classes, state) {\r\n    if (!classes) {\r\n        return;\r\n    }\r\n    if (!Array.isArray(classes)) {\r\n        classes = [classes];\r\n    }\r\n    let el = element;\r\n    while (el) {\r\n        el = closest(el, selector);\r\n        if (el && el.previousElementSibling) {\r\n            for (let i = 0; i < classes.length - 1; i++) {\r\n                if (el.previousElementSibling.classList.contains(classes[i])) {\r\n                    this._setActiveState(el, state);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/*\r\n * Export our directive\r\n */\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        if (isServer || el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS] = new ScrollSpy(el, binding);\r\n    },\r\n    inserted(el, binding) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS].updateConfig(binding).listen().refresh().process();\r\n    },\r\n    update(el, binding) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS].updateConfig(binding).refresh().process();\r\n    },\r\n    componentUpdated(el, binding) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        el[BVSS].updateConfig(binding).refresh().process();\r\n    },\r\n    unbind(el) {\r\n        if (isServer || !el[BVSS]) {\r\n            return;\r\n        }\r\n        // Remove scroll event listener on scrollElId\r\n        el[BVSS].unListen().dispose();\r\n        el[BVSS] = null;\r\n    }\r\n};\r\n","<template>\r\n    <div v-if=\"localShow\"\r\n         :class=\"classObject\"\r\n         role=\"alert\"\r\n         aria-live=\"polite\"\r\n         aria-atomic=\"true\"\r\n    >\r\n        <button type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"alert\"\r\n                aria-label=\"dismissLabel\"\r\n                v-if=\"dismissible\"\r\n                @click.stop.prevent=\"dismiss\"\r\n        >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                countDownTimerId: null,\r\n                dismissed: false\r\n            };\r\n        },\r\n        created() {\r\n            if (this.state) {\r\n                console.warn('<b-alrt> state property is deprecated, please use variant instead.');\r\n            }\r\n        },\r\n        computed: {\r\n            classObject() {\r\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\r\n            },\r\n            alertVariant() {\r\n                const variant = this.state || this.variant || 'info';\r\n                return `alert-${variant}`;\r\n            },\r\n            localShow() {\r\n                return !this.dismissed && (this.countDownTimerId || this.show);\r\n            }\r\n        },\r\n        props: {\r\n            variant: {\r\n                type: String,\r\n                default: 'info'\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            dismissible: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dismissLabel: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            show: {\r\n                type: [Boolean, Number],\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            show() {\r\n                this.showChanged();\r\n            }\r\n        },\r\n        mounted() {\r\n            this.showChanged();\r\n        },\r\n        methods: {\r\n            dismiss() {\r\n                this.dismissed = true;\r\n                this.$emit('dismissed');\r\n                this.clearCounter();\r\n            },\r\n            clearCounter() {\r\n                if (this.countDownTimerId) {\r\n                    clearInterval(this.countDownTimerId);\r\n                }\r\n            },\r\n            showChanged() {\r\n                // Reset dismiss status\r\n                this.dismissed = false;\r\n\r\n                // No timer for boolean values\r\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\r\n                    return;\r\n                }\r\n\r\n                let dismissCountDown = this.show;\r\n                this.$emit('dismiss-count-down', dismissCountDown);\r\n\r\n                // Start counter\r\n                this.clearCounter();\r\n                this.countDownTimerId = setInterval(() => {\r\n                    if (dismissCountDown < 2) {\r\n                        return this.dismiss();\r\n                    }\r\n                    dismissCountDown--;\r\n                    this.$emit('dismiss-count-down', dismissCountDown);\r\n                }, 1000);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","// Props compatible with vue-router\r\n// https://github.com/vuejs/vue-router/blob/dev/src/components/link.js\r\n\r\nexport default {\r\n    computed: {\r\n        isRouterLink() {\r\n            return Boolean(this.$router && this.to && !this.disabled);\r\n        },\r\n        _href() {\r\n            if (this.disabled) {\r\n                return '#';\r\n            }\r\n\r\n            // If href explicitly provided\r\n            if (this.href) {\r\n                return this.href;\r\n            }\r\n\r\n            // Fallback to `to` prop\r\n            if (this.to && typeof this.to === 'string') {\r\n                return this.to;\r\n            }\r\n        },\r\n        linkClassObject() {\r\n            return [\r\n                this.active ? (this.exact ? this.exactActiveClass : this.activeClass) : null,\r\n                this.disabled ? 'disabled' : null\r\n            ];\r\n        }\r\n    },\r\n    props: {\r\n        active: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        disabled: Boolean,\r\n\r\n        href: {\r\n            type: String,\r\n            default: '#'\r\n        },\r\n\r\n        to: {\r\n            type: [String, Object],\r\n            default: null\r\n        },\r\n\r\n        tag: {\r\n            type: String,\r\n            default: 'a'\r\n        },\r\n\r\n        exact: Boolean,\r\n\r\n        append: Boolean,\r\n\r\n        replace: Boolean,\r\n\r\n        activeClass: {\r\n            type: String,\r\n            default: 'active'\r\n        },\r\n\r\n        exactActiveClass: {\r\n            type: String,\r\n            default: 'active'\r\n        },\r\n\r\n        event: {\r\n            type: [String, Array],\r\n            default: 'click'\r\n        }\r\n    },\r\n    methods: {\r\n        linkClick(e) {\r\n            if (!this.disabled) {\r\n                this.$root.$emit('clicked::link', this);\r\n                this.$emit('click');\r\n            }\r\n\r\n            if (this.disabled || (!this.isRouterLink && this._href === '#')) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <!-- When VueRouter is available -->\r\n    <a v-if=\"isRouterLink\"\r\n       is=\"router-link\"\r\n       :active-class=\"activeClass\"\r\n       :exact-active-class=\"exactActiveClass\"\r\n       :disabled=\"disabled\"\r\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n       :to=\"to\"\r\n       :exact=\"exact\"\r\n       :append=\"append\"\r\n       :replace=\"replace\"\r\n       :event=\"event\"\r\n       :tag=\"tag\"\r\n       :class=\"linkClassObject\"\r\n       @click=\"linkClick\"\r\n    >\r\n        <slot></slot>\r\n    </a>\r\n\r\n    <!-- Fallback mode -->\r\n    <a v-else\r\n       :disabled=\"disabled\"\r\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n       :href=\"_href\"\r\n       :class=\"linkClassObject\"\r\n       @click=\"linkClick\"\r\n    >\r\n        <slot></slot>\r\n    </a>\r\n</template>\r\n\r\n<script>\r\n    import linkMixin from '../mixins/link';\r\n\r\n    export default {\r\n        mixins: [linkMixin]\r\n    };\r\n</script>\r\n","<template>\r\n    <ol class=\"breadcrumb\" role=\"navigation\">\r\n        <li v-for=\"item in items2\"\r\n            :class=\"['breadcrumb-item', item.__active ? 'active' : null]\"\r\n            @click=\"onclick(item)\"\r\n            role=\"presentation\"\r\n        >\r\n            <span v-if=\"item.active\" v-html=\"item.text\"></span>\r\n            <b-link v-else\r\n                    :to=\"item.to\"\r\n                    :href=\"item.href || item.link\"\r\n                    v-html=\"item.text\"\r\n                    @click=\"onclick\"\r\n            ></b-link>\r\n        </li>\r\n        <slot></slot>\r\n    </ol>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            componentType() {\r\n                return this.to ? 'router-link' : 'a';\r\n            },\r\n            items2() {\r\n                const last = this.items.length > 0 && this.items[this.items.length - 1];\r\n\r\n                return this.items.map(item => {\r\n                    if (typeof item === 'string') {\r\n                        return {text: item, link: '#', active: item === last};\r\n                    }\r\n\r\n                    if (item.active !== true && item.active !== false) {\r\n                        item.__active = item === last;\r\n                    } else {\r\n                        item.__active = item.active;\r\n                    }\r\n\r\n                    return item;\r\n                });\r\n            }\r\n        },\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default: () => [],\r\n                required: true\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(item) {\r\n                this.$emit('click', item);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <button :class=\"classObject\"\r\n            :is=\"componentType\"\r\n            :to=\"to\"\r\n            :href=\"href\"\r\n            @click=\"onclick\"\r\n            :disabled=\"disabled\"\r\n    >\r\n        <slot></slot>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn',\r\n                    this.btnVariant,\r\n                    this.btnSize,\r\n                    this.btnBlock,\r\n                    this.btnDisabled,\r\n                    this.inactive ? 'btn-inactive' : ''\r\n                ];\r\n            },\r\n            componentType() {\r\n                return (this.href || this.to) ? 'b-link' : 'button';\r\n            },\r\n            btnBlock() {\r\n                return this.block ? `btn-block` : '';\r\n            },\r\n            btnVariant() {\r\n                return this.variant ? `btn-${this.variant}` : `btn-secondary`;\r\n            },\r\n            btnSize() {\r\n                return this.size ? `btn-${this.size}` : '';\r\n            },\r\n            btnDisabled() {\r\n                return this.disabled ? 'disabled' : '';\r\n            }\r\n        },\r\n        props: {\r\n            block: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            inactive: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            to: {\r\n                type: [String, Object]\r\n            },\r\n            href: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(e) {\r\n                if (this.disabled) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                } else {\r\n                    this.$emit('click', e);\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\"\r\n         role=\"toolbar\"\r\n         :tabindex=\"keyNav ? '0' : null\"\r\n         @focusin.self=\"focusFirst\"\r\n         @keydown.left=\"focusNext($event,true)\"\r\n         @keydown.up=\"focusNext($event,true)\"\r\n         @keydown.right=\"focusNext($event,false)\"\r\n         @keydown.down=\"focusNext($event,false)\"\r\n         @keydown.shift.left=\"focusFirst($event)\"\r\n         @keydown.shift.up=\"focusFirst($event)\"\r\n         @keydown.shift.right=\"focusLast($event)\"\r\n         @keydown.shift.down=\"focusLast($event)\"\r\n    >\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const ITEM_SELECTOR = [\r\n        '.btn:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        '.form-control:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'select:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input[type=\"checkbox\"]:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input[type=\"radio\"]:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])'\r\n    ].join(',');\r\n\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn-toolbar',\r\n                    (this.justify && !this.vertical) ? 'justify-content-between' : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            justify: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            KeyNav: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            setItemFocus(item) {\r\n                this.$nextTick(() => {\r\n                    item.focus();\r\n                });\r\n            },\r\n            focusNext(e, prev) {\r\n                if (!this.keyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length < 1) {\r\n                    return;\r\n                }\r\n                let index = items.indexOf(e.target);\r\n                if (prev && index > 0) {\r\n                    index--;\r\n                } else if (!prev && index < items.length - 1) {\r\n                    index++;\r\n                }\r\n                if (index < 0) {\r\n                    index = 0;\r\n                }\r\n                this.setItemFocus(items[index]);\r\n            },\r\n            focusFirst(e) {\r\n                if (!this.keyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length > 0) {\r\n                    this.setItemFocus(items[0]);\r\n                }\r\n            },\r\n            focusLast(e) {\r\n                if (!this.keyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length > 0) {\r\n                    this.setItemFocus([items.length - 1]);\r\n                }\r\n            },\r\n            getItems() {\r\n                const items = Array.prototype.slice.call(this.$el.querySelectorAll(ITEM_SELECTOR));\r\n                items.forEach(item => {\r\n                    // Ensure tabfocus is -1 on any new elements\r\n                    item.tabIndex = -1;\r\n                });\r\n                return items;\r\n            }\r\n        },\r\n        mounted() {\r\n            if (this.keyNav) {\r\n                // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\r\n                this.getItems();\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn-group',\r\n                    this.vertical ? 'btn-group-vertical' : '',\r\n                    (this.justify && !this.vertical) ? 'justify-content-between' : '',\r\n                    this.size ? ('btn-group-' + this.size) : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            vertical: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            justify: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","const ITEM_SELECTOR = [\r\n    '.dropdown-item:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n    '.dropdown-header:not([style*=\"display: none\"]):not([style*=\"display:none\"])'\r\n].join(',');\r\n\r\nexport default {\r\n    props: {\r\n        split: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        text: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        dropup: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        right: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    created() {\r\n        const listener = el => {\r\n            if (el !== this) {\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        // To keep one dropdown opened on page\r\n        this.$root.$on('shown::dropdown', listener);\r\n\r\n        // Hide when clicked on links\r\n        this.$root.$on('clicked::link', listener);\r\n    },\r\n    watch: {\r\n        visible(state, old) {\r\n            if (state === old) {\r\n                return; // Avoid duplicated emits\r\n            }\r\n\r\n            if (state) {\r\n                this.$root.$emit('shown::dropdown', this);\r\n                /*\r\n                 If this is a touch-enabled device we add extra\r\n                 empty mouseover listeners to the body's immediate children;\r\n                 only needed because of broken event delegation on iOS\r\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\r\n                 */\r\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\r\n                    const children = Array.prototype.slice.call(document.body.children);\r\n                    children.forEach(el => {\r\n                        el.addEventListener('mouseover', this.noop);\r\n                    });\r\n                }\r\n            } else {\r\n                this.$root.$emit('hidden::dropdown', this);\r\n                /*\r\n                 If this is a touch-enabled device we remove the extra\r\n                 empty mouseover listeners we added for iOS support\r\n                 */\r\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\r\n                    const children = Array.prototype.slice.call(document.body.children);\r\n                    children.forEach(el => {\r\n                        el.removeEventListener('mouseover', this.noop);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        noop() {\r\n            // Do nothing event handler (used in visible watch)\r\n        },\r\n        toggle() {\r\n            if (this.disabled) {\r\n                this.visible = false;\r\n                return;\r\n            }\r\n            this.visible = !this.visible;\r\n            if (this.visible) {\r\n                this.$nextTick(function () {\r\n                    // Focus first visible non-disabled item\r\n                    const items = this.getItems();\r\n                    if (items.length > 0) {\r\n                        items[0].focus();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        onTab() {\r\n            if (this.visible) {\r\n                this.visible = false;\r\n            }\r\n        },\r\n        onEsc(e) {\r\n            if (this.visible) {\r\n                this.visible = false;\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.$nextTick(function () {\r\n                    // Return focus to original trigger button\r\n                    let el;\r\n                    if (this.split && this.$refs.toggle) {\r\n                        el = this.$refs.toggle.$el || this.$refs.toggle;\r\n                    } else {\r\n                        el = this.$refs.button.$el || this.$refs.button;\r\n                    }\r\n                    if (el && el.focus) {\r\n                        el.focus();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        focusNext(e, up) {\r\n            if (!this.visible) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            const items = this.getItems();\r\n            if (items.length < 1) {\r\n                return;\r\n            }\r\n            let index = items.indexOf(e.target);\r\n            if (up && index > 0) {\r\n                index--;\r\n            } else if (!up && index < items.length - 1) {\r\n                index++;\r\n            }\r\n            if (index < 0) {\r\n                index = 0;\r\n            }\r\n            items[index].focus();\r\n        },\r\n        getItems() {\r\n            return Array.prototype.slice.call(this.$refs.menu.querySelectorAll(ITEM_SELECTOR));\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"['btn-group','dropdown', {dropup, show: visible}]\">\r\n\r\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\r\n                  ref=\"button\"\r\n                  :id=\"id ? (id + '__BV_button_') : null\"\r\n                  :aria-expanded=\"visible ? 'true' : 'false'\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"click\"\r\n                  @kedown.space.stop.prevent=\"click\"\r\n                  @kedown.enter.stop.prevent=\"click\"\r\n        >\r\n            <slot name=\"text\">{{text}}</slot>\r\n        </b-button>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             role=\"menu\"\r\n             ref=\"menu\"\r\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut,\r\n            dropdown\r\n        ],\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        computed: {\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\" role=\"group\">\r\n        <slot name=\"left\">\r\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\r\n        </slot>\r\n\r\n        <slot></slot>\r\n\r\n        <slot name=\"right\">\r\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\r\n        </slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'input-group',\r\n                    this.size ? ('input-group-' + this.size) : '',\r\n                    this.state ? ('has-' + this.state) : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            left: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            right: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"input-group-addon\" :id=\"id\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"input-group-btn\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" :class=\"['card',cardVariant,cardAlign,cardInverse]\">\r\n        <!-- Card Image Slot-->\r\n        <slot name=\"img\" ref=\"img\">\r\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\r\n        </slot>\r\n\r\n        <!-- Card Header-->\r\n        <component v-if=\"header || showHeader\" :is=\"headerTag\" class=\"card-header\">\r\n            <slot name=\"header\">\r\n                <div v-html=\"header\"></div>\r\n            </slot>\r\n        </component>\r\n\r\n        <!--Show custom block when no-block prop is set-->\r\n        <template v-if=\"noBlock\">\r\n            <slot></slot>\r\n        </template>\r\n\r\n        <!-- Card Standard Blocks-->\r\n        <div :class=\"blockClass\" v-else>\r\n            <h4 v-if=\"title\" class=\"card-title\" v-html=\"title\"></h4>\r\n            <h6 v-if=\"subTitle\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Card Footer-->\r\n        <component v-if=\"footer || showFooter\" :is=\"footerTag\" class=\"card-footer\">\r\n            <slot name=\"footer\">\r\n                <div v-html=\"footer\"></div>\r\n            </slot>\r\n        </component>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            blockClass() {\r\n                return [\r\n                    'card-block',\r\n                    this.overlay ? 'card-img-overlay' : null\r\n                ];\r\n            },\r\n            cardVariant() {\r\n                return this.variant ? `card-${this.variant}` : null;\r\n            },\r\n            cardInverse() {\r\n                if (this.overlay || this.inverse) {\r\n                    return 'card-inverse';\r\n                }\r\n                // Auto inverse colored cards\r\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\r\n                    this.variant.indexOf('outline') === -1) {\r\n                    return 'card-inverse';\r\n                }\r\n            },\r\n            cardAlign() {\r\n                return this.align ? `text-${this.align}` : null;\r\n            }\r\n        },\r\n        props: {\r\n            align: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inverse: {\r\n                type: Boolean,\r\n                // It should remain null for auto inverse\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            tag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Header\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            headerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Footer\r\n            footer: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            footerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Main block\r\n            title: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            subTitle: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            noBlock: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n\r\n            // Image\r\n            img: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            imgAlt: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            overlay: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" :class=\"['card-' + type]\">\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            type() {\r\n                if (this.deck) {\r\n                    return 'deck';\r\n                }\r\n\r\n                if (this.columns) {\r\n                    return 'columns';\r\n                }\r\n\r\n                return 'group';\r\n            }\r\n        },\r\n        props: {\r\n            tag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n            deck: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            columns: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"carousel slide\"\r\n         role=\"region\"\r\n         :id=\"id || null\"\r\n         :style=\"{background,height}\"\r\n         :aria-busy=\"isSliding ? 'true' : 'false'\"\r\n         @mouseenter=\"pause\"\r\n         @mouseleave=\"start\"\r\n         @focusin=\"pause\"\r\n         @focusout=\"restart($event)\"\r\n         @keydown.left=\"prev\"\r\n         @keydown.right=\"next\"\r\n    >\r\n        <!-- Indicators -->\r\n        <ol role=\"group\" \r\n            class=\"carousel-indicators\"\r\n            v-show=\"indicators\"\r\n            :aria-hidden=\"indicators ? 'false' : 'true'\"\r\n            :aria-label=\"indicators && labelIndicators ? labelIndicators : null\"\r\n            :aria-owns=\"indictors && id ? (id + '__BV_inner_') : null\"\r\n            :aria-activedescendant=\"slides[index].id || null\"\r\n            :tabindex=\"indicators ? '0' : '-1'\"\r\n            @focusin.self=\"focusActiveIndicator\"\r\n            @keydown.left.stop.prevent=\"focusPrevIndicator\"\r\n            @keydown.up.stop.prevent=\"focusPrevIndicator\"\r\n            @keydown.right.stop.prevent=\"focusNextIndicator\"\r\n            @keydown.down.stop.prevent=\"focusNextIndicator\"\r\n        >\r\n            <li v-for=\"n in slides.length\"\r\n                role=\"button\"\r\n                tabindex=\"-1\"\r\n                ref=\"indcators\"\r\n                :id=\"id ? (id + '__BV_indicator_' + n + '_') : null\"\r\n                :class=\"{active:n-1 === index}\"\r\n                :aria-current=\"n-1 === index ? 'true' : 'false'\"\r\n                :aria-posinset=\"n\"\r\n                :aria-setsize=\"slides.length\"\r\n                :aria-label=\"labelGotoSlide + ' ' + n\"\r\n                :aria-describedby=\"slides[n-1].id || null\"\r\n                :aria-controls=\"id ? (id + '__BV_inner_') : null\"\r\n                @click=\"index=n-1\"\r\n                @keydown.enter.stop.prevent=\"index=n-1\"\r\n                @keydown.space.stop.prevent=\"index=n-1\"\r\n            ></li>\r\n        </ol>\r\n\r\n        <!-- Wrapper for slides -->\r\n        <div class=\"carousel-inner\"\r\n             role=\"list\"\r\n            :id=\"id ? (id + '__BV_inner_') : null\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Controls -->\r\n        <template v-if=\"controls\">\r\n            <a class=\"carousel-control-prev\"\r\n               href=\"#\"\r\n               role=\"button\"\r\n               data-slide=\"prev\"\r\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\r\n               @click.stop.prevent=\"prev\"\r\n               @keydown.enter.stop.prevent=\"prev\"\r\n               @keydown.space.stop.prevent=\"prev\"\r\n            >\r\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">{{labelPrev}}</span>\r\n            </a>\r\n            <a class=\"carousel-control-next\"\r\n               href=\"#\"\r\n               role=\"button\"\r\n               data-slide=\"next\"\r\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\r\n               @click.stop.prevent=\"next\"\r\n               @keydown.enter.stop.prevent=\"next\"\r\n               @keydown.space.stop.prevent=\"next\"\r\n            >\r\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">{{labelNext}}</span>\r\n            </a>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const DIRECTION = {\r\n        next: {\r\n            current: 'carousel-item-left',\r\n            next: 'carousel-item-right',\r\n            overlay: 'carousel-item-next'\r\n        },\r\n        prev: {\r\n            current: 'carousel-item-right',\r\n            next: 'carousel-item-left',\r\n            overlay: 'carousel-item-prev'\r\n        }\r\n    };\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                index: 0,\r\n                isSliding: false,\r\n                slides: []\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            labelPrev: {\r\n                type: String,\r\n                default: 'Previous Slide'\r\n            },\r\n            labelNext: {\r\n                type: String,\r\n                default: 'Next Slide'\r\n            },\r\n            labelGotoSlide: {\r\n                type: String,\r\n                default: 'Goto Slide'\r\n            },\r\n            labelIndicators: {\r\n                type: String,\r\n                default: 'Select a slide to display'\r\n            },\r\n            interval: {\r\n                type: Number,\r\n                default: 5000\r\n            },\r\n            indicators: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            controls: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            height: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            // Previous slide\r\n            prev() {\r\n                if (this.index <= 0) {\r\n                    this.index = this.slides.length - 1;\r\n                } else {\r\n                    this.index--;\r\n                }\r\n            },\r\n\r\n            // Next slide\r\n            next() {\r\n                if (this.index >= this.slides.length - 1) {\r\n                    this.index = 0;\r\n                } else {\r\n                    this.index++;\r\n                }\r\n            },\r\n\r\n            // Pause auto rotation\r\n            pause() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                clearInterval(this._intervalId);\r\n                this._intervalId = null;\r\n                // Make current slide focusable for screen readers\r\n                this.slides[this.index].tabIndex = 0;\r\n            },\r\n\r\n            // Start auto rotate slides\r\n            start() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                this.slides.forEach(slide => {\r\n                    slide.tabIndex = -1;\r\n                });\r\n                this._intervalId = setInterval(() => {\r\n                    this.next();\r\n                }, this.interval);\r\n            },\r\n\r\n            // Re-Start auto rotate slides when focus leaves the carousel\r\n            restart(e) {\r\n                if (!e.relatedTarget || !this.$el.contains(e.relatedTarget)) {\r\n                    this.start();\r\n                }\r\n            },\r\n\r\n            // Focus first indicator\r\n            focusActiveIndicator() {\r\n                if (this.indicators & this.$refs.indicators.length > 0) {\r\n                    this.$nextTick(() => {\r\n                        this.$refs.indicators[this.index].focus();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Focus prev indicator\r\n            focusPrevIndicator() {\r\n                if (this.indicators & this.$refs.indicators.length > 0) {\r\n                    const idx = this.$refs.indicators.indexOf(el => Boolean(el === document.activeElement));\r\n                    if (idx > 0) {\r\n                        this.$nextTick(() => {\r\n                            this.$refs.indicators[idx - 1].focus();\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n\r\n            focusNextIndicator() {\r\n                if (this.indicators & this.$refs.indicators.length > 0) {\r\n                    const idx = this.$refs.indicators.indexOf(el => Boolean(el === document.activeElement));\r\n                    if (idx > 0 && idx < this.$refs.indicators - 1) {\r\n                        this.$nextTick(() => {\r\n                            this.$refs.indicators[idx + 1].focus();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            // Get all slides\r\n            this.slides = this.$el.querySelectorAll('.carousel-item');\r\n\r\n            // Set first slide as active\r\n            this.slides[0].classList.add('active');\r\n            this.slides.forEach((slide, idx) => {\r\n                const n = idx + 1;\r\n                slide.setAttribute('aria-current', idx === 0 ? 'true' : 'false');\r\n                slide.setAttribute('aria-posinset', String(n));\r\n                slide.setAttribute('aria-setsize', String(this.slides.length));\r\n                slide.tabIndex = -1;\r\n                if (this.id) {\r\n                    slide.setAttribute('aria-controlledby', this.id + '__BV_indicator_' + n + '_');\r\n                }\r\n            });\r\n\r\n            // Auto rotate slides\r\n            this._intervalId = null;\r\n            this.start();\r\n        },\r\n        watch: {\r\n            index(val, oldVal) {\r\n                if (val === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (this.isSliding) {\r\n                    this.index = oldVal;\r\n                    return;\r\n                }\r\n\r\n                // Determine sliding direction\r\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\r\n\r\n                // Rotates\r\n                if (oldVal === 0 && val === this.slides.length - 1) {\r\n                    direction = DIRECTION.prev;\r\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\r\n                    direction = DIRECTION.next;\r\n                }\r\n\r\n                // Determine current and next slides\r\n                const currentSlide = this.slides[oldVal];\r\n                const nextSlide = this.slides[val];\r\n\r\n                if (!currentSlide || !nextSlide) {\r\n                    return;\r\n                }\r\n\r\n                // Start animating\r\n                this.isSliding = true;\r\n\r\n                nextSlide.classList.add(direction.next, direction.overlay);\r\n                currentSlide.classList.add(direction.current);\r\n\r\n                this._carouselAnimation = setTimeout(() => {\r\n                    this.isSliding = false;\r\n                    this.$emit('slide', val);\r\n\r\n                    currentSlide.classList.remove('active');\r\n                    currentSlide.setAttribute('aria-current', 'false');\r\n                    currentSlide.setAttribute('aria-hidden', 'true');\r\n                    currentSlide.tabIndex = -1;\r\n\r\n                    nextSlide.classList.add('active');\r\n                    nextSlide.setAttribute('aria-current', 'true');\r\n                    currentSlide.setAttribute('aria-hidden', 'false');\r\n                    currentSlide.tabIndex = -1;\r\n\r\n                    if (!this._intervalId) {\r\n                        // Focus the slide for screen readers if not in play mode\r\n                        currentSlide.tabIndex = 0;\r\n                        this.$nextTick(() => {\r\n                            currentSlide.focus();\r\n                        });\r\n                    }\r\n\r\n                    currentSlide.classList.remove(direction.current);\r\n                    nextSlide.classList.remove(direction.next, direction.overlay);\r\n                }, 500);\r\n            }\r\n        },\r\n        destroyed() {\r\n            clearTimeout(this._carouselAnimation);\r\n            clearInterval(this._intervalId);\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div class=\"carousel-item\"\r\n         role=\"listitem\"\r\n         :id=\"id || null\"\r\n         :style=\"{background,height}\"\r\n    >\r\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\r\n        <div :class=\"contentClasses\">\r\n            <h3 v-if=\"caption\" v-html=\"caption\"></h3>\r\n            <p v-if=\"text\" v-html=\"text\"></p>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            img: {\r\n                type: String\r\n            },\r\n            imgAlt: {\r\n                type: String\r\n            },\r\n            contentVisibleUp: {\r\n                type: String\r\n            },\r\n            caption: {\r\n                type: String\r\n            },\r\n            text: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            },\r\n            height: {\r\n                type: String\r\n            }\r\n        },\r\n        computed: {\r\n            contentClasses() {\r\n                const classes = {\r\n                    'carousel-caption': Boolean(this.caption)\r\n                };\r\n                if (this.contentVisibleUp) {\r\n                    classes['d-none'] = true;\r\n                    classes[`d-${this.contentVisibleUp}-block`] = true;\r\n                }\r\n                return classes;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <transition\r\n            @enter=\"enter\"\r\n            @after-enter=\"clearHeight\"\r\n            @leave=\"leave\"\r\n            @after-leave=\"clearHeight\"\r\n            name=\"collapse\"\r\n    >\r\n        <div :class=\"classObject\" v-show=\"show\" :aria-expanded=\"show ? 'true' : 'false'\">\r\n            <slot></slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<style scoped>\r\n    .collapse-enter-active, .collapse-leave-active {\r\n        transition: all .35s ease;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .collapse-enter, .collapse-leave-to {\r\n        /*height: 0;*/\r\n    }\r\n</style>\r\n\r\n<script>\r\n    export default {\r\n\r\n        data() {\r\n            return {\r\n                show: false\r\n            };\r\n        },\r\n\r\n        computed: {\r\n            classObject() {\r\n                return {\r\n                    'navbar-collapse': this.isNav,\r\n                    show: this.show\r\n                };\r\n            }\r\n        },\r\n\r\n        props: {\r\n            isNav: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            id: {\r\n                type: String,\r\n                required: true\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            toggle() {\r\n                this.show = !this.show;\r\n                this.emitState();\r\n            },\r\n            enter(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = '0px';\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = realHeight;\r\n            },\r\n            leave(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = realHeight;\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = '0px';\r\n            },\r\n            clearHeight(el) {\r\n                el.style.height = null;\r\n            },\r\n            emitState() {\r\n                this.$root.$emit('collapse::toggle::state', this.id, this.state);\r\n            }\r\n        },\r\n        created() {\r\n            this.$root.$on('collapse::toggle', target => {\r\n                if (target !== this.id) {\r\n                    return;\r\n                }\r\n                this.toggle();\r\n            });\r\n        },\r\n        mounted() {\r\n            this.emitState();\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div :id=\"id || null\" :class=\"['dropdown','btn-group',{dropup, show: visible}]\">\r\n\r\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\r\n                  ref=\"button\"\r\n                  :id=\"id ? (id + '__BV_button_') : null\"\r\n                  :aria-haspopup=\"split ? null : 'true'\"\r\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"click\"\r\n        >\r\n            <slot name=\"text\">{{text}}</slot>\r\n        </b-button>\r\n\r\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split',{'btn-link': link}]\"\r\n                  v-if=\"split\"\r\n                  ref=\"toggle\"\r\n                  :id=\"id ? (id + '__BV_toggle_') : null\"\r\n                  :aria-haspopup=\"split ? 'true' : null\"\r\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"toggle\"\r\n        >\r\n            <span class=\"sr-only\">{{toggleText}}</span>\r\n        </b-button>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             ref=\"menu\"\r\n             role=\"menu\"\r\n             :aria-labelledby=\"id ? (id + (split ? '__BV_toggle_' : '__BV_button_')) : null\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n    import bButton from './button.vue';\r\n\r\n    export default {\r\n        mixins: [clickOut, dropdown],\r\n        components: {bButton},\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            toggleText: {\r\n                type: String,\r\n                default: 'Toggle Dropdown'\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            link: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            },\r\n            click(e) {\r\n                if (this.disabled) {\r\n                    this.visible = false;\r\n                    return;\r\n                }\r\n\r\n                if (this.split) {\r\n                    this.$emit('click', e);\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                } else {\r\n                    this.toggle();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <b-link class=\"dropdown-item\"\r\n            :active=\"active\"\r\n            :disabled=\"disabled\"\r\n            :href=\"href\"\r\n            :to=\"to\"\r\n            :tag=\"tag\"\r\n            :exact=\"exact\"\r\n            :append=\"append\"\r\n            :replace=\"replace\"\r\n            :active-class=\"activeClass\"\r\n            :exact-active-class=\"exactActiveClass\"\r\n            :event=\"event\"\r\n            @click=\"$emit('click')\"\r\n    >\r\n        <slot></slot>\r\n    </b-link>\r\n</template>\r\n\r\n<script>\r\n    import linkMixin from '../mixins/link';\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        mixins: [linkMixin]\r\n    };\r\n</script>\r\n","<template>\r\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" tabindex=\"-1\" class=\"dropdown-header\">\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            tag: {\r\n                type: String,\r\n                default: 'h6'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\r\n    <div :class=\"['form-group','row',inputState]\"\r\n        role=\"group\"\r\n        :aria-describedby=\"describedBy\"\r\n    >\r\n        <label v-if=\"label\"\r\n               :for=\"target\"\r\n               :id=\"labelId\"\r\n               :class=\"[labelSrOnly ? 'sr-only' : 'col-form-label',labelLayout,labelAlignClass]\"\r\n               v-html=\"label\"\r\n        ></label>\r\n        <div :class=\"inputLayout\" ref=\"content\">\r\n            <slot></slot>\r\n            <div v-if=\"feedback\"\r\n                 class=\"form-text form-control-feedback\"\r\n                 :id=\"feedbackId\"\r\n                 role=\"alert\"\r\n                 aria-live=\"assertive\"\r\n                 aria-atomic=\"true\"\r\n                 v-html=\"feedback\"\r\n            ></div>\r\n            <small v-if=\"description\"\r\n                   class=\"form-text text-muted\"\r\n                   :id=\"descriptionId\"\r\n                   v-html=\"description\"\r\n            ></small>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                target: null\r\n            };\r\n        },\r\n        computed: {\r\n            labelId() {\r\n                return (this.id && this.label) ? (this.id + '__BV_label_') : null;\r\n            },\r\n            descriptionId() {\r\n                return (this.id && this.description) ? (this.id + '__BV_description_') : null;\r\n            },\r\n            feedbackId() {\r\n                return (this.id && this.feedback) ? (this.id + '__BV_feedback_') : null;\r\n            },\r\n            describedBy() {\r\n                if (this.id && (this.label || this.feedback || this.description)) {\r\n                    return [\r\n                        this.labelId,\r\n                        this.descriptionId,\r\n                        this.feedbackId\r\n                    ].filter(i => i).join(' ');\r\n                }\r\n                return null;\r\n            },\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            },\r\n            labelLayout() {\r\n                if (this.labelSrOnly) {\r\n                    return null;\r\n                }\r\n                return this.horizontal ? ('col-sm-' + this.labelSize) : 'col-12';\r\n            },\r\n            labelAlignClass() {\r\n                if (this.labelSrOnly) {\r\n                    return null;\r\n                }\r\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\r\n            },\r\n            inputLayout() {\r\n                return this.horizontal ? ('col-sm-' + (12 - this.labelSize)) : 'col-12';\r\n            }\r\n        },\r\n        methods: {\r\n            updateTarget() {\r\n                const content = this.$refs.content;\r\n                if (!content) {\r\n                    return null;\r\n                }\r\n                const input = content.querySelector(this.inputSelector);\r\n                this.target = (input && input.id) ? input.id : null;\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTarget();\r\n        },\r\n        updated() {\r\n            this.updateTarget();\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            horizontal: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            labelSize: {\r\n                type: Number,\r\n                default: 3\r\n            },\r\n            labelTextAlign: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            label: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            labelSrOnly: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            description: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            feedback: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inputSelector: {\r\n                type: String,\r\n                default: 'input,select,textarea,.form-control,.form-control-static,.dropdown,.dropup'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","export default {\r\n    computed: {\r\n        inputClass() {\r\n            return [\r\n                this.size ? `form-control-${this.size}` : null,\r\n                this.state ? `form-control-${this.state}` : null\r\n            ];\r\n        },\r\n        custom() {\r\n            return !this.plain;\r\n        }\r\n    },\r\n    props: {\r\n        name: {\r\n            type: String\r\n        },\r\n        disabled: {\r\n            type: Boolean\r\n        },\r\n        plain: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        state: {\r\n            type: String\r\n        },\r\n        size: {\r\n            type: String\r\n        },\r\n        id: {\r\n            type: String\r\n        }\r\n    }\r\n};\r\n\r\n","export default {\r\n    computed: {\r\n        checkboxClass() {\r\n            return {\r\n                'custom-control': this.custom,\r\n                'form-check-inline': this.inline\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\n","/**\r\n * Tries to generate id using uid if no id prop is provided.\r\n * NOTE: this mixin should be used only when `aria` and `for` tags are needed, in other cases.\r\n * it is better to prefer references/refs and events over relying on generated id.\r\n * @see https://github.com/bootstrap-vue/bootstrap-vue/issues/281\r\n *\r\n * Currently is being used in:\r\n *  - dropdown.vue\r\n *  - form-checkbox-vue\r\n *  - form-file.vue\r\n *  - form-input.vue\r\n *  - form-select.vue\r\n */\r\n\r\nconst inBrowser = typeof window !== 'undefined';\r\nconst UNSAFE_UID = (inBrowser && window.UNSAFE_UID === true) || (!inBrowser && process.env.UNSAFE_UID === true);\r\n\r\nexport default {\r\n    computed: {\r\n        _id() {\r\n            if (!UNSAFE_UID || this.id) {\r\n                return this.id;\r\n            }\r\n\r\n            return `__b_${this._uid}__`;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <label :class=\"[inputClass,checkboxClass,custom?'custom-checkbox':null]\">\r\n        <input\r\n                type=\"checkbox\"\r\n                :id=\"_id\"\r\n                :name=\"name\"\r\n                :value=\"value\"\r\n                :disabled=\"disabled\"\r\n\r\n                :class=\"[custom?'custom-control-input':null]\"\r\n                :checked=\"checked===value\"\r\n                @change=\"$emit('change',$event.target.checked?value:uncheckedValue)\"\r\n        >\r\n        <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\r\n        <span :class=\"[custom?'custom-control-description':null]\"><slot></slot></span>\r\n    </label>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin, generateId],\r\n        model: {\r\n            prop: 'checked',\r\n            event: 'change'\r\n        },\r\n        props: {\r\n            value: {\r\n                default: true\r\n            },\r\n            uncheckedValue: {\r\n                default: false\r\n            },\r\n            checked: {\r\n                default: true\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","export default {\r\n    computed: {\r\n        formOptions() {\r\n            let options = this.options || {};\r\n\r\n            if (Array.isArray(options)) {\r\n                // Normalize flat arrays to object Array\r\n                options = options.map(option => {\r\n                    if (typeof option === 'object') {\r\n                        return {\r\n                            value: option[this.valueField],\r\n                            text: option[this.textField],\r\n                            disabled: option.disabled || false\r\n                        };\r\n                    }\r\n\r\n                    return {text: String(option), value: option || {}};\r\n                });\r\n            } else {\r\n                // Normalize Objects keys to Array\r\n                options = Object.keys(options).map(value => {\r\n                    let option = options[value] || {};\r\n\r\n                    // Resolve text\r\n                    if (typeof option !== 'object') {\r\n                        option = {text: String(option)};\r\n                    }\r\n\r\n                    // Resolve value (uses key as value if not provided)\r\n                    option.value = option[this.valueField] || value;\r\n\r\n                    return option;\r\n                });\r\n            }\r\n\r\n            return options;\r\n        },\r\n        selectedValue() {\r\n            const formOptions = this.formOptions;\r\n            for (let i = 0; i < formOptions.length; i++) {\r\n                if (formOptions[i].value === this.localValue) {\r\n                    if (this.returnObject) {\r\n                        return formOptions[i];\r\n                    }\r\n                    return formOptions[i].value;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    props: {\r\n        valueField: {\r\n            type: [String],\r\n            default: 'value'\r\n        },\r\n        textField: {\r\n            type: [String],\r\n            default: 'text'\r\n        }\r\n    },\r\n    watch: {\r\n        localValue(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.$emit('input', this.selectedValue);\r\n        },\r\n        value(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.localValue = value;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"[inputClass,this.stacked?'custom-controls-stacked':'']\">\r\n        <label :class=\"[checkboxClass,custom?'custom-radio':null]\" v-for=\"option in formOptions\">\r\n            <input\r\n                    v-model=\"localValue\"\r\n                    :class=\"custom?'custom-control-input':null\"\r\n                    type=\"radio\"\r\n                    :value=\"option.value\"\r\n                    :name=\"option.name\"\r\n                    :id=\"option.id\"\r\n                    :disabled=\"option.disabled\"\r\n                    ref=\"inputs\"\r\n            >\r\n\r\n            <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\r\n\r\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\r\n\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import formOptionsMixin from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin, formOptionsMixin],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        computed: {\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            }\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                default: null,\r\n                required: true\r\n            },\r\n            stacked: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <p :id=\"_id\"\r\n       :class=\"['form-control-static',inputClass]\"\r\n       v-html=\"staticValue\"\r\n    >\r\n        <slot></slot>\r\n    </p>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        computed: {\r\n            staticValue() {\r\n                return this.formatter ? this.formatter(this.value) : this.value;\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <input v-if=\"!static\"\r\n           :type=\"type\"\r\n           :value=\"value\"\r\n           :name=\"name\"\r\n           :id=\"_id\"\r\n           :disabled=\"disabled\"\r\n           ref=\"input\"\r\n\r\n           :is=\"textarea?'textarea':'input'\"\r\n           :class=\"['form-control',inputClass]\"\r\n           :rows=\"rows || rowsCount\"\r\n\r\n           :placeholder=\"placeholder\"\r\n\r\n           @input=\"onInput($event.target.value)\"\r\n           @change=\"onChange($event.target.value)\"\r\n           @keyup=\"onKeyUp($event)\"\r\n           @focus=\"$emit('focus')\"\r\n           @blur=\"$emit('blur')\"\r\n    />\r\n    <b-form-input-static v-else\r\n                         :id=\"_id\"\r\n                         :value=\"value\"\r\n                         :formatter=\"formatter\"\r\n    ></b-form-input-static>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n    import bFormInputStatic from './form-input-static.vue';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        components: {bFormInputStatic},\r\n        computed: {\r\n            rowsCount() {\r\n                return (this.value || '').toString().split('\\n').length;\r\n            }\r\n        },\r\n        methods: {\r\n            format(value) {\r\n                if (this.formatter) {\r\n                    const formattedValue = this.formatter(value);\r\n                    if (formattedValue !== value) {\r\n                        value = formattedValue;\r\n                        this.$refs.input.value = formattedValue;\r\n                    }\r\n                }\r\n                return value;\r\n            },\r\n            onInput(value) {\r\n                if (!this.lazyFormatter) {\r\n                    value = this.format(value);\r\n                }\r\n                this.$emit('input', value);\r\n            },\r\n            onChange(value) {\r\n                value = this.format(value);\r\n                this.$emit('input', value);\r\n                this.$emit('change', value);\r\n            },\r\n            onKeyUp(e) {\r\n                this.$emit('keyup', e);\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: 'text'\r\n            },\r\n            static: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            rows: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            textarea: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            },\r\n            lazyFormatter: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <label :class=\"[custom?'custom-file':null,inputClass]\"\r\n           @dragover.stop.prevent=\"dragover\"\r\n    >\r\n\r\n        <!-- Drop Here Target -->\r\n        <span class=\"drop-here\"\r\n              v-if=\"dragging\"\r\n              @dragover.stop.prevent=\"dragover\"\r\n              @drop.stop.prevent=\"drop\"\r\n              @dragleave.stop.prevent=\"dragging=false\"\r\n              :data-drop=\"dropLabel\"\r\n        ></span>\r\n\r\n        <!-- Real Form input -->\r\n        <input type=\"file\"\r\n               :name=\"name\"\r\n               :id=\"_id\"\r\n               :disabled=\"disabled\"\r\n               ref=\"input\"\r\n               :accept=\"accept\"\r\n\r\n               class=\"custom-file-input\"\r\n               @change=\"onFileChange\"\r\n               :multiple=\"multiple\"\r\n               :webkitdirectory=\"directory\"\r\n        >\r\n\r\n        <!-- Overlay Labels -->\r\n        <span :class=\"['custom-file-control',dragging?'dragging':null,inputClass]\"\r\n              :data-choose=\"computedChooseLabel\"\r\n              :data-selected=\"selectedLabel\"\r\n              v-if=\"custom\"\r\n        ></span>\r\n\r\n    </label>\r\n</template>\r\n\r\n<style>\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control.dragging {\r\n        overflow: hidden;\r\n        filter: blur(3px);\r\n    }\r\n\r\n    .custom-file-control::after {\r\n        content: attr(data-selected);\r\n    }\r\n\r\n    .custom-file-control::before {\r\n        content: attr(data-choose);\r\n    }\r\n\r\n    .custom-file .drop-here {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        background-color: rgba(0, 0, 0, .5);\r\n        border-radius: 3px;\r\n        z-index: 99999;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .custom-file .drop-here::before {\r\n        color: white;\r\n        content: attr(data-drop);\r\n    }\r\n\r\n</style>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        data() {\r\n            return {\r\n                selectedFile: null,\r\n                dragging: false\r\n            };\r\n        },\r\n        computed: {\r\n            selectedLabel() {\r\n                if (!this.selectedFile || this.selectedFile.length === 0) {\r\n                    return this.placeholder || 'No file chosen';\r\n                }\r\n\r\n                if (this.multiple) {\r\n                    if (this.selectedFile.length === 1) {\r\n                        return this.selectedFile[0].name;\r\n                    }\r\n\r\n                    return this.selectedFormat\r\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\r\n                        .replace(':count', this.selectedFile.length);\r\n                }\r\n\r\n                return this.selectedFile.name;\r\n            },\r\n            computedChooseLabel() {\r\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\r\n            }\r\n        },\r\n        watch: {\r\n            selectedFile(newVal, oldVal) {\r\n                if (newVal === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (!newVal && this.multiple) {\r\n                    this.$emit('input', []);\r\n                } else {\r\n                    this.$emit('input', newVal);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            onFileChange(e) {\r\n                // Always emit original event\r\n                this.$emit('change', e);\r\n\r\n                // Check if special `items` prop is available on event (drop mode)\r\n                // Can be disabled by setting no-traverse\r\n                const items = e.dataTransfer && e.dataTransfer.items;\r\n                if (items && !this.noTraverse) {\r\n                    const queue = [];\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        const item = items[i].webkitGetAsEntry();\r\n                        if (item) {\r\n                            queue.push(this.traverseFileTree(item));\r\n                        }\r\n                    }\r\n                    Promise.all(queue).then(filesArr => {\r\n                        this.setFiles(Array.prototype.concat.apply([], filesArr));\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                // Normal handling\r\n                this.setFiles(e.target.files || e.dataTransfer.files);\r\n            },\r\n            setFiles(files) {\r\n                if (!files) {\r\n                    this.selectedFile = null;\r\n                    return;\r\n                }\r\n\r\n                if (!this.multiple) {\r\n                    this.selectedFile = files[0];\r\n                    return;\r\n                }\r\n\r\n                // Convert files to array\r\n                const filesArray = [];\r\n                for (let i = 0; i < files.length; i++) {\r\n                    if (files[i].type.match(this.accept)) {\r\n                        filesArray.push(files[i]);\r\n                    }\r\n                }\r\n\r\n                this.selectedFile = filesArray;\r\n            },\r\n            dragover(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = true;\r\n                e.dataTransfer.dropEffect = 'copy';\r\n            },\r\n            drop(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = false;\r\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n                    this.onFileChange(e);\r\n                }\r\n            },\r\n            traverseFileTree(item, path) {\r\n                // Based on http://stackoverflow.com/questions/3590058\r\n                return new Promise(resolve => {\r\n                    path = path || '';\r\n                    if (item.isFile) {\r\n                        // Get file\r\n                        item.file(file => {\r\n                            file.$path = path; // Inject $path to file obj\r\n                            resolve(file);\r\n                        });\r\n                    } else if (item.isDirectory) {\r\n                        // Get folder contents\r\n                        item.createReader().readEntries(entries => {\r\n                            const queue = [];\r\n                            for (let i = 0; i < entries.length; i++) {\r\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\r\n                            }\r\n                            Promise.all(queue).then(filesArr => {\r\n                                resolve(Array.prototype.concat.apply([], filesArr));\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        props: {\r\n            accept: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            chooseLabel: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            multiple: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            directory: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noTraverse: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            selectedFormat: {\r\n                type: String,\r\n                default: ':count Files'\r\n            },\r\n            noDrop: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dropLabel: {\r\n                type: String,\r\n                default: 'Drop files here'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <select :class=\"[inputClass,custom?'custom-select':null]\"\r\n            :name=\"name\"\r\n            :id=\"_id\"\r\n            v-model=\"localValue\"\r\n            :disabled=\"disabled\"\r\n            ref=\"input\"\r\n    >\r\n        <option v-for=\"option in formOptions\"\r\n                :value=\"option.value\"\r\n                v-html=\"option.text\"\r\n                :disabled=\"option.disabled\"\r\n        ></option>\r\n    </select>\r\n</template>\r\n\r\n<script>\r\n    import formOptions from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, formOptions, generateId],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                required: true\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\r\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\r\n            <h1 v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\r\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {},\r\n        props: {\r\n            fluid: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            containerFluid: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            lead: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\" :class=\"classObject\" ref=\"item\" :to=\"to\" :href=\"href\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    const actionTags = ['a', 'router-link', 'button', 'b-link'];\n\n    export default {\n        components: {bLink},\n        computed: {\n            classObject() {\n                return [\n                    'list-group-item',\n                    this.listState,\n                    this.active ? 'active' : null,\n                    this.disabled ? 'disabled' : null,\n                    this.isAction ? 'list-group-item-action' : null\n                ];\n            },\n            isAction() {\n                if (this.action === false) {\n                    return false;\n                }\n                return this.action || this.to || this.href || actionTags.indexOf(this.tag) !== -1;\n            },\n            listState() {\n                return this.variant ? `list-group-item-${this.variant}` : null;\n            },\n            myTag() {\n                if (this.tag) {\n                    return this.tag;\n                }\n                return (this.to || this.href) ? 'b-link' : 'div';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: null\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            action: {\n                type: Boolean,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            to: {\n                type: String,\n                default: null\n            },\n            href: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\r\n    <div>\r\n        <transition-group enter-class=\"hidden\"\r\n                          enter-to-class=\"\"\r\n                          enter-active-class=\"\"\r\n                          @after-enter=\"focusFirst\"\r\n                          leave-class=\"show\"\r\n                          leave-active-class=\"\"\r\n                          leave-to-class=\"hidden\"\r\n        >\r\n            <div key=\"modal\" :id=\"id\"\r\n                 v-show=\"is_visible\"\r\n                 :class=\"['modal',{fade: fade, show: is_visible}]\"\r\n                 role=\"dialog\"\r\n                 @click=\"onClickOut($event)\"\r\n                 @keyup.esc=\"onEsc($event)\"\r\n            >\r\n\r\n                <div :class=\"['modal-dialog','modal-'+size]\">\r\n                    <div class=\"modal-content\"\r\n                         tabindex=\"-1\"\r\n                         role=\"document\"\r\n                         ref=\"content\"\r\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '_modal_title')\"\r\n                         :aria-describedby=\"id ? (id + '_modal_body') : null\"\r\n                         @click.stop\r\n                    >\r\n\r\n                        <header class=\"modal-header\" ref=\"header\" v-if=\"!hideHeader\">\r\n                            <slot name=\"modal-header\">\r\n                                <h5 class=\"modal-title\" :id=\"id ? (id + '_modal_title') : null\">\r\n                                    <slot name=\"modal-title\">{{title}}</slot>\r\n                                </h5>\r\n                                <button type=\"button\"\r\n                                        v-if=\"!hideHeaderClose\"\r\n                                        class=\"close\"\r\n                                        :aria-label=\"closeTitle\"\r\n                                        @click=\"hide\"\r\n                                >\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </slot>\r\n                        </header>\r\n\r\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '_modal_body') : null\">\r\n                            <slot></slot>\r\n                        </div>\r\n\r\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\r\n                            <slot name=\"modal-footer\">\r\n                                <b-btn variant=\"secondary\" @click=\"hide(false)\" v-if=\"!okOnly\">{{closeTitle}}</b-btn>\r\n                                <b-btn variant=\"primary\" @click=\"hide(true)\">{{okTitle}}</b-btn>\r\n                            </slot>\r\n                        </footer>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div key=\"modal-backdrop\"\r\n                 :class=\"['modal-backdrop',{fade: fade, show: is_visible}]\"\r\n                 v-if=\"is_visible\"\r\n            ></div>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n    .hidden {\r\n        opacity: 0 !important;\r\n    }\r\n\r\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\r\n    .modal {\r\n        display: block;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import bBtn from './button.vue';\r\n\r\n    const FOCUS_SELECTOR = [\r\n        'button:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'select:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'textarea:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'a:not([disabled]):not(.disabled):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        '[tabindex]:not([disabled]):not(.disabled):not([style*=\"display: none\"]):not([style*=\"display:none\"])'\r\n    ].join(',');\r\n\r\n    export default {\r\n        components: {bBtn},\r\n        data() {\r\n            return {\r\n                is_visible: false,\r\n                return_focus: this.returnFocus || null\r\n            };\r\n        },\r\n        model: {\r\n            prop: 'visible',\r\n            event: 'change'\r\n        },\r\n        computed: {\r\n            body() {\r\n                if (typeof document !== 'undefined') {\r\n                    return document.querySelector('body');\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            visible(new_val, old_val) {\r\n                if (new_val === old_val) {\r\n                    return;\r\n                }\r\n\r\n                if (new_val) {\r\n                    this.show();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'md'\r\n            },\r\n            fade: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            closeTitle: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            okTitle: {\r\n                type: String,\r\n                default: 'OK'\r\n            },\r\n            closeOnBackdrop: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            closeOnEsc: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            hideHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            okOnly: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideHeaderClose: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnFocus: {\r\n                default: null\r\n            }\r\n        },\r\n        methods: {\r\n            show() {\r\n                if (this.is_visible) {\r\n                    return;\r\n                }\r\n                this.is_visible = true;\r\n                this.$root.$emit('shown::modal', this.id);\r\n                this.body.classList.add('modal-open');\r\n                this.$emit('shown');\r\n                this.$emit('change', true);\r\n                if (typeof document !== 'undefined') {\r\n                    // Guard against infinite focus loop\r\n                    document.removeEventListener('focusin', this.enforceFocus, false);\r\n                    // Handle constrained focus\r\n                    document.addEventListener('focusin', this.enforceFocus, false);\r\n                }\r\n            },\r\n            hide(isOK) {\r\n                if (!this.is_visible) {\r\n                    return;\r\n                }\r\n\r\n                // Create event object\r\n                let canceled = false;\r\n                const e = {\r\n                    isOK,\r\n                    cancel() {\r\n                        canceled = true;\r\n                    }\r\n                };\r\n\r\n                // Emit events\r\n                this.$emit('change', false);\r\n                this.$emit('hidden', e);\r\n\r\n                if (isOK === true) {\r\n                    this.$emit('ok', e);\r\n                } else if (isOK === false) {\r\n                    this.$emit('cancel', e);\r\n                }\r\n\r\n                // Hide if not canceled\r\n                if (!canceled) {\r\n                    if (typeof document !== 'undefined') {\r\n                        // Remove focus handler\r\n                        document.removeEventListener('focusin', this.enforceFocus, false);\r\n                        // Return focus to original button/trigger element if provided\r\n                        this.returnFocusTo();\r\n                    }\r\n                    this.is_visible = false;\r\n                    this.$root.$emit('hidden::modal', this.id);\r\n                    this.body.classList.remove('modal-open');\r\n                }\r\n            },\r\n            onClickOut() {\r\n                // If backdrop clicked, hide modal\r\n                if (this.closeOnBackdrop) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            onEsc() {\r\n                // If ESC pressed, hide modal\r\n                if (this.is_visible && this.closeOnEsc) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            focusFirst() {\r\n                // If activeElement is child of content, no need to change focus\r\n                if (document.activeElement && this.$refs.content.contains(document.activeElement)) {\r\n                    return;\r\n                }\r\n\r\n                // Focus the modal's first focusable item, searching footer, then body, then header, else the modal\r\n                let el;\r\n                if (this.$refs.footer) {\r\n                    el = this.$refs.footer.querySelector(FOCUS_SELECTOR);\r\n                }\r\n                if (!el && this.$refs.body) {\r\n                    el = this.$refs.body.querySelector(FOCUS_SELECTOR);\r\n                }\r\n                if (!el && this.$refs.header) {\r\n                    el = this.$refs.header.querySelector(FOCUS_SELECTOR);\r\n                }\r\n                if (!el) {\r\n                    el = this.$refs.content;\r\n                }\r\n                if (el && el.focus) {\r\n                    el.focus();\r\n                }\r\n            },\r\n            returnFocusTo() {\r\n                if (this.return_focus) {\r\n                    const el = (typeof this.return_focus === 'string') ?\r\n                        document.querySelector(this.returnFocus) :\r\n                        this.return_focus;\r\n\r\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\r\n                        el.$el.focus();\r\n                    } else if (el && typeof el.focus === 'function') {\r\n                        el.focus();\r\n                    }\r\n                }\r\n            },\r\n            enforceFocus(e) {\r\n                // If focus leaves modal, bring it back\r\n                // Event Listener bound on document\r\n                if (this.is_visible &&\r\n                    document !== e.target &&\r\n                    this.$refs.content &&\r\n                    this.$refs.content !== e.target &&\r\n                    !this.$refs.content.contains(e.target)) {\r\n                    this.$refs.content.focus();\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.$root.$on('show::modal', (id, triggerEl) => {\r\n                if (id === this.id) {\r\n                    this.return_focus = triggerEl || this.return_focus || this.returnFocus || null;\r\n                    this.show();\r\n                }\r\n            });\r\n\r\n            this.$root.$on('hide::modal', id => {\r\n                if (id === this.id) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        },\r\n        mounted() {\r\n            if (this.visible === true) {\r\n                this.show();\r\n            }\r\n        },\r\n        destroyed() {\r\n            // Make sure event listener is rmoved\r\n            if (typeof document !== 'undefined') {\r\n                document.removeEventListener('focusin', this.enforceFocus, false);\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <component :is=\"type\"\r\n               :class=\"classObject\"\r\n               :role=\"isNavBar ? null : 'navigation'\"\r\n    >\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    computed: {\r\n        classObject() {\r\n            return {\r\n                nav: true,\r\n                'navbar-nav': this.isNavBar,\r\n                'nav-tabs': this.tabs,\r\n                'nav-pills': this.pills,\r\n                'flex-column': this.vertical,\r\n                'nav-fill': this.fill\r\n            };\r\n        }\r\n    },\r\n    props: {\r\n        type: {\r\n            type: String,\r\n            default: 'ul'\r\n        },\r\n        fill: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        tabs: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        pills: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        vertical: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isNavBar: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    }\r\n};\r\n\r\n</script>\r\n","<template>\r\n    <li class=\"nav-item\">\r\n        <b-link class=\"nav-link\"\r\n                :active=\"active\"\r\n                :disabled=\"disabled\"\r\n                :href=\"href\"\r\n                :to=\"to\"\r\n                :tag=\"tag\"\r\n                :exact=\"exact\"\r\n                :append=\"append\"\r\n                :replace=\"replace\"\r\n                :active-class=\"activeClass\"\r\n                :exact-active-class=\"exactActiveClass\"\r\n                :event=\"event\"\r\n                @click=\"$emit('click')\"\r\n        >\r\n            <slot></slot>\r\n        </b-link>\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import linkMixin from '../mixins/link';\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        mixins: [linkMixin]\r\n    };\r\n</script>\r\n","<template>\r\n    <li :class=\"['nav-item','dropdown', {dropup, show: visible}]\">\r\n\r\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\r\n           href=\"#\"\r\n           ref=\"button\"\r\n           :id=\"id ? (id + '__BV_button_') : null\"\r\n           aria-haspopup=\"true\"\r\n           :aria-expanded=\"visible ? 'true' : 'false'\"\r\n           :disabled=\"disabled\"\r\n           @click.stop.prevent=\"toggle($event)\"\r\n           @keydown.enter.stop.prevent=\"toggle($event)\"\r\n           @keydown.space.stop.prevent=\"toggle($event)\"\r\n        >\r\n            <slot name=\"text\"><span v-html=\"text\"></span></slot>\r\n        </a>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             role=\"menu\"\r\n             ref=\"menu\"\r\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut,\r\n            dropdown\r\n        ],\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        computed: {\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <button :class=\"classObject\"\r\n            type=\"button\"\r\n            :aria-label=\"label\"\r\n            @click=\"onclick\"\r\n            :aria-controls=\"target.id ? target.id : target\"\r\n            :aria-explanded=\"toggleState\"\r\n    >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    computed: {\r\n        classObject() {\r\n            return [\r\n                'navbar-toggler',\r\n                'navbar-toggler-' + this.position\r\n            ];\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            toggleState: false\r\n        };\r\n    },\r\n    props: {\r\n        label: {\r\n            type: String,\r\n            default: 'Toggle navigation'\r\n        },\r\n        position: {\r\n            type: String,\r\n            default: 'right'\r\n        },\r\n        target: {\r\n            required: true\r\n        }\r\n    },\r\n    methods: {\r\n        onclick() {\r\n            const target = this.target;\r\n            if (target.toggle) {\r\n                target.toggle();\r\n            }\r\n            this.$root.$emit('collapse::toggle', this.target);\r\n        }\r\n    },\r\n    created() {\r\n        this.$root.$on('collapse::toggle::state', (target, state) => {\r\n            if (target === this.target) {\r\n                this.toggleState = state;\r\n            }\r\n        });\r\n    }\r\n};\r\n</script>\r\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? `navbar-toggleable-${this.toggleBreakpoint}` : null\n                ];\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: 'sm'\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: String\n            }\n        }\n    };\n</script>\n","<template>\r\n    <div :class=\"['btn-group','pagination',btnSize]\" \r\n         role=\"group\"\r\n         tabindex=\"0\"\r\n         :aria-label=\"ariaLabel ? ariaLabel : null\"\r\n         @focusin.self=\"focusCurrent\"\r\n         @keydown.left.prevent=\"focusPrev\"\r\n         @keydown.right.prevent=\"focusNext\"\r\n         @keydown.shift.left.prevent=\"focusFirst\"\r\n         @keydown.shift.right.prevent=\"focusLast\"\r\n    >\r\n\r\n        <button type=\"button\"\r\n                :class=\"['btn','btn-'+secondaryVariant]\"\r\n                :disabled=\"isActive(1)\"\r\n                :aria-label=\"labelPrev\"\r\n                tabindex=\"-1\"\r\n                ref=\"buttonPrev\"\r\n                @click.prevent=\"isActive(1) ? _return : currentPage--\"\r\n        >\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n        </button>\r\n\r\n        <button type=\"button\"\r\n                :class=\"['btn','btn-'+secondaryVariant,isActive(1)?'active':'']\"\r\n                :aria-label=\"labelPage + ' 1'\"\r\n                :aria-current=\"isActive(1) ? 'true' : 'false'\"\r\n                :aria-setsize=\"numberOfPages\"\r\n                :aria-posinset=\"1\"\r\n                tabindex=\"-1\"\r\n                ref=\"buttonFirst\"\r\n                v-if=\"showPrev\"\r\n                @click.prevent=\"currentPage = 1\"\r\n        >1</button>\r\n\r\n        <span :class=\"['btn','btn-'+secondaryVariant]\" v-show=\"showPrev\">...</span>\r\n\r\n        <button type=\"button\"\r\n                :class=\"['btn',btnVariant(index),isActive(index + diff)?'active':'',isActive(index + diff)?'':'hidden-xs-down']\"\r\n                :aria-label=\"labelPage + ' ' + (index + diff)\"\r\n                :aria-current=\"isActive(index + diff) ? 'true' : 'false'\"\r\n                :aria-setsize=\"numberOfPages\"\r\n                :aria-posinset=\"index + diff\"\r\n                tabindex=\"-1\"\r\n                ref=\"buttonPages\"\r\n                v-for=\"_,index in pageLinks\"\r\n                @click.prevent=\"currentPage = index + diff\"\r\n        >{{index + diff}}</button>\r\n\r\n        <span :class=\"['btn','btn-'+secondaryVariant]\" v-show=\"showNext\">...</span>\r\n\r\n        <button type=\"button\"\r\n                :class=\"['btn','btn-'+secondaryVariant,isActive(numberOfPages) ? 'active' : '']\"\r\n                :aria-label=\"labelPage + ' ' + numberOfPages\"\r\n                :aria-current=\"isActive(numberOfPages) ? 'true' : 'false'\"\r\n                :aria-setsize=\"numberOfPages\"\r\n                :aria-posinset=\"numberOfPages\"\r\n                tabindex=\"-1\"\r\n                ref=\"buttonLast\"\r\n                v-if=\"showNext\"\r\n                @click.prevent=\"currentPage = numberOfPages\"\r\n        >{{numberOfPages}}</button>\r\n\r\n        <button type=\"button\"\r\n                :class=\"['btn','btn-'+secondaryVariant]\"\r\n                :disabled=\"isActive(numberOfPages)\"\r\n                :aria-label=\"labelNext\"\r\n                tabindex=\"-1\"\r\n                ref=\"buttonNext\"\r\n                @click.prevent=\"isActive(numberOfPages) ? _return : currentPage++\"\r\n        >\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n        </button>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                diff: 1,\r\n                showPrev: false,\r\n                showNext: false,\r\n                currentPage: this.value\r\n            };\r\n        },\r\n        computed: {\r\n            numberOfPages() {\r\n                const result = Math.ceil(this.totalRows / this.perPage);\r\n                return (result < 1) ? 1 : result;\r\n            },\r\n            btnSize() {\r\n                return !this.size || this.size === `default` ? `` : `pagination-${this.size}`;\r\n            },\r\n            pageLinks() {\r\n                if (this.currentPage > this.numberOfPages) {\r\n                    this.currentPage = 1;\r\n                }\r\n\r\n                // Defaults\r\n                this.diff = 1;\r\n                this.showPrev = false;\r\n                this.showNext = false;\r\n\r\n                // If less pages than limit just show this pages\r\n                if (this.numberOfPages <= this.limit) {\r\n                    return this.numberOfPages;\r\n                }\r\n\r\n                // If at the beginning of the list\r\n                if (this.currentPage <= this.limit - 2) {\r\n                    this.diff = 1;\r\n                    this.showNext = true;\r\n                    return this.limit - 2;\r\n                }\r\n\r\n                // If at the end of the list\r\n                if (this.currentPage > this.numberOfPages - this.limit + 2) {\r\n                    this.diff = this.numberOfPages - this.limit + 3;\r\n                    this.showPrev = true;\r\n                    return this.limit - 2;\r\n                }\r\n\r\n                // Else we are somewhere in the middle\r\n                this.diff = this.currentPage - 1;\r\n                this.showPrev = this.currentPage >= this.limit;\r\n                this.showNext = this.currentPage <= this.numberOfPages - this.limit + 1;\r\n                return this.limit;\r\n            }\r\n        },\r\n        methods: {\r\n            isActive(page) {\r\n                return page === this.currentPage;\r\n            },\r\n            btnVariant(index) {\r\n                return (index + this.diff === this.currentPage) ? `btn-${this.variant}` : `btn-${this.secondaryVariant}`;\r\n            },\r\n            getButtons() {\r\n                let buttons = [this.$refs.buttonPrev];\r\n                if (this.showPrev) {\r\n                    buttons.push(this.$refs.buttonFirst);\r\n                }\r\n                buttons = buttons.concat(this.$refs.buttonPages);\r\n                if (this.showNext) {\r\n                    buttons.push(this.$refs.buttonLast);\r\n                }\r\n                buttons.push(this.$refs.buttonNext);\r\n                return buttons;\r\n            },\r\n            setBtnFocus(btn) {\r\n                this.$nextTick(() => {\r\n                    btn.focus();\r\n                });\r\n            },\r\n            focusFirst() {\r\n                const btn = this.getButtons().find(el => !el.disabled);\r\n                if (btn && btn.focus && btn !== document.activeElement) {\r\n                    this.setBtnFocus(btn);\r\n                }\r\n            },\r\n            focusLast() {\r\n                const btn = this.getButtons().reverse().find(el => !el.disabled);\r\n                if (btn && btn.focus && btn !== document.activeElement) {\r\n                    this.setBtnFocus(btn);\r\n                }\r\n            },\r\n            focusCurrent() {\r\n                const btn = this.getButtons().find(el => parseInt(el.getAttribute('aria-posinset'), 10) === this.currentPage);\r\n                if (btn && btn.focus) {\r\n                    this.setBtnFocus(btn);\r\n                } else {\r\n                    // Fallback if current page is not in button list\r\n                    this.focusFirst();\r\n                }\r\n            },\r\n            focusPrev() {\r\n                const buttons = this.getButtons();\r\n                const idx = buttons.indexOf(document.activeElement);\r\n                if (idx > 0 && !buttons[idx - 1].disabled && buttons[idx - 1].focus) {\r\n                    this.setBtnFocus(buttons[idx - 1]);\r\n                }\r\n            },\r\n            focusNext() {\r\n                const buttons = this.getButtons();\r\n                const idx = buttons.indexOf(document.activeElement);\r\n                const cnt = buttons.length - 1;\r\n                if (idx < cnt && !buttons[idx + 1].disabled && buttons[idx + 1].focus) {\r\n                    this.setBtnFocus(buttons[idx + 1]);\r\n                }\r\n            },\r\n            _return() {\r\n\r\n            }\r\n        },\r\n        watch: {\r\n            currentPage(newPage, oldPage) {\r\n                if (newPage === oldPage) {\r\n                    return;\r\n                }\r\n\r\n                this.$emit('input', newPage);\r\n            },\r\n            value(newValue, oldValue) {\r\n                if (newValue !== oldValue) {\r\n                    this.currentPage = newValue;\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                type: Number,\r\n                default: 1\r\n            },\r\n            limit: {\r\n                type: Number,\r\n                default: 3\r\n            },\r\n            perPage: {\r\n                type: Number,\r\n                default: 20\r\n            },\r\n            totalRows: {\r\n                type: Number,\r\n                default: 20\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'md'\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: 'primary'\r\n            },\r\n            secondaryVariant: {\r\n                type: String,\r\n                default: 'secondary'\r\n            },\r\n            ariaLabel: {\r\n                type: String,\r\n                default: 'Pagination'\r\n            },\r\n            labelPrevPage: {\r\n                type: String,\r\n                default: 'Previous Page'\r\n            },\r\n            labelNextPage: {\r\n                type: String,\r\n                default: 'Next Page'\r\n            },\r\n            labelPage: {\r\n                type: String,\r\n                default: 'Page'\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div>\r\n        <span ref=\"trigger\"><slot></slot></span>\r\n\r\n        <div tabindex=\"-1\"\r\n             class=\"popover fade\"\r\n             :class=\"[classState ? 'show' : '', popoverAlignment]\"\r\n             ref=\"popover\"\r\n             @focus=\"$emit('focus')\"\r\n             @blur=\"$emit('blur')\"\r\n             :style=\"popoverStyle\"\r\n        >\r\n            <div class=\"popover-arrow\"></div>\r\n            <h3 class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\r\n            <div class=\"popover-content\">\r\n                <div class=\"popover-content-wrapper\">\r\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Tether from 'tether';\r\n\r\n    // Controls which events are mapped for each named trigger, and the expected popover behavior for each.\r\n    const TRIGGER_LISTENERS = {\r\n        click: {click: 'toggle'},\r\n        hover: {mouseenter: 'show', mouseleave: 'hide'},\r\n        focus: {focus: 'show', blur: 'hide'}\r\n    };\r\n\r\n    const PLACEMENT_PARAMS = {\r\n        top: 'bottom center',\r\n        bottom: 'top center',\r\n        left: 'middle right',\r\n        right: 'middle left'\r\n    };\r\n\r\n    const TETHER_CLASS_PREFIX = 'bs-tether';\r\n\r\n    const TETHER_CLASSES = {\r\n        element: false,\r\n        enabled: false\r\n    };\r\n\r\n    const TRANSITION_DURATION = 150;\r\n\r\n    export default {\r\n        props: {\r\n            constraints: {\r\n                type: Array,\r\n                default() {\r\n                    return [];\r\n                }\r\n            },\r\n            content: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            debounce: {\r\n                type: [Number],\r\n                default: 300,\r\n                validator(value) {\r\n                    return value >= 0;\r\n                }\r\n            },\r\n            delay: {\r\n                type: [Number, Object],\r\n                default: 0,\r\n                validator(value) {\r\n                    if (typeof value === 'number') {\r\n                        return value >= 0;\r\n                    } else if (value !== null && typeof value === 'object') {\r\n                        return typeof value.show === 'number' &&\r\n                            typeof value.hide === 'number' &&\r\n                            value.show >= 0 &&\r\n                            value.hide >= 0;\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            },\r\n            offset: {\r\n                type: String,\r\n                default: '0 0',\r\n                validator(value) {\r\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n                }\r\n            },\r\n            placement: {\r\n                type: String,\r\n                default: 'top',\r\n                validator(value) {\r\n                    return Object.keys(PLACEMENT_PARAMS).indexOf(value) !== -1;\r\n                }\r\n            },\r\n            popoverStyle: {\r\n                type: Object,\r\n                default: null\r\n            },\r\n            show: {\r\n                type: Boolean,\r\n                default: null\r\n            },\r\n            targetOffset: {\r\n                type: String,\r\n                default: '0 0',\r\n                validator(value) {\r\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n                }\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            triggers: {\r\n                type: [Boolean, String, Array],\r\n                default: () => ['click', 'focus'],\r\n                validator(value) {\r\n                    // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\r\n                    if (value === false || value === '') {\r\n                        return true;\r\n                    } else if (typeof value === 'string') {\r\n                        return Object.keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\r\n                    } else if (Array.isArray(value)) {\r\n                        const keys = Object.keys(TRIGGER_LISTENERS);\r\n                        value.forEach(item => {\r\n                            if (keys.indexOf(item) === -1) {\r\n                                return false;\r\n                            }\r\n                        });\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                triggerState: this.show,\r\n                classState: this.show,\r\n                lastEvent: null\r\n            };\r\n        },\r\n\r\n        computed: {\r\n            /**\r\n             * Arrange event trigger hooks as array for all input types.\r\n             *\r\n             * @return Array\r\n             */\r\n            normalizedTriggers() {\r\n                if (this.triggers === false) {\r\n                    return [];\r\n                } else if (typeof this.triggers === 'string') {\r\n                    return [this.triggers];\r\n                }\r\n                return this.triggers;\r\n            },\r\n\r\n            /**\r\n             * Class property to be used for Popover rendering\r\n             *\r\n             * @return String\r\n             */\r\n            popoverAlignment() {\r\n                return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\r\n            },\r\n\r\n            /**\r\n             * Determine if the Popover should be shown.\r\n             *\r\n             * @return Boolean\r\n             */\r\n            showState() {\r\n                return this.show !== false && (this.triggerState || this.show);\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            constraints() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Refresh Popover event triggers\r\n             * @param {Array} newTriggers\r\n             * @param {Array} oldTriggers\r\n             */\r\n            normalizedTriggers(newTriggers, oldTriggers) {\r\n                this.updateListeners(newTriggers, oldTriggers);\r\n            },\r\n\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            offset() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            placement() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Affect 'show' state in response to status change\r\n             * @param  {Boolean} val\r\n             */\r\n            showState(val) {\r\n                const delay = this.getDelay(val);\r\n\r\n                clearTimeout(this._timeout);\r\n\r\n                if (delay) {\r\n                    this._timeout = setTimeout(() => this.togglePopover(val), delay);\r\n                } else {\r\n                    this.togglePopover(val);\r\n                }\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            /**\r\n             * Add all event hooks for the given trigger\r\n             * @param {String} trigger\r\n             */\r\n            addListener(trigger) {\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                    this._trigger.addEventListener(item, e => this.eventHandler(e));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Tidy removal of Tether object from the DOM\r\n             */\r\n            destroyTether() {\r\n                if (this._tether && !this.showState) {\r\n                    this._tether.destroy();\r\n                    this._tether = null;\r\n\r\n                    const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\r\n                    this._trigger.className = this._trigger.className.replace(regx, '');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handle multiple event triggers\r\n             * @param  {Object} e\r\n             */\r\n            eventHandler(e) {\r\n                // If this event is right after a previous successful event, ignore it (debounce)\r\n                if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\r\n                    return;\r\n                }\r\n\r\n                // Look up the expected popover action for the event\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const trigger in TRIGGER_LISTENERS) {\r\n                    for (const event in TRIGGER_LISTENERS[trigger]) {\r\n                        if (event === e.type) {\r\n                            const action = TRIGGER_LISTENERS[trigger][event];\r\n\r\n                            // If the expected event action is the opposite of the current state, allow it\r\n                            if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\r\n                                this.triggerState = !this.triggerState;\r\n                                this.lastEvent = e.timeStamp;\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get the currently applicable popover delay\r\n             *\r\n             * @returns Number\r\n             */\r\n            getDelay(state) {\r\n                if (typeof this.delay === 'object') {\r\n                    return state ? this.delay.show : this.delay.hide;\r\n                }\r\n\r\n                return this.delay;\r\n            },\r\n\r\n            /**\r\n             * Tether construct params for each show event.\r\n             *\r\n             * @return Object\r\n             */\r\n            getTetherOptions() {\r\n                return {\r\n                    attachment: PLACEMENT_PARAMS[this.placement],\r\n                    element: this._popover,\r\n                    target: this._trigger,\r\n                    classes: TETHER_CLASSES,\r\n                    classPrefix: TETHER_CLASS_PREFIX,\r\n                    offset: this.offset,\r\n                    constraints: this.constraints,\r\n                    targetOffset: this.targetOffset\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Hide popover and fire event\r\n             */\r\n            hidePopover() {\r\n                this.classState = false;\r\n                clearTimeout(this._timeout);\r\n                this._timeout = setTimeout(() => {\r\n                    this._popover.style.display = 'none';\r\n                    this.destroyTether();\r\n                }, TRANSITION_DURATION);\r\n            },\r\n\r\n            /**\r\n             * Refresh the Popover position in order to respond to changes\r\n             */\r\n            refreshPosition() {\r\n                if (this._tether) {\r\n                    this.$nextTick(() => {\r\n                        this._tether.position();\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Remove all event hooks for the given trigger\r\n             * @param {String} trigger\r\n             */\r\n            removeListener(trigger) {\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                    this._trigger.removeEventListener(item, e => this.eventHandler(e));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Update tether options\r\n             */\r\n            setOptions() {\r\n                if (this._tether) {\r\n                    this._tether.setOptions(this.getTetherOptions());\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Display popover and fire event\r\n             */\r\n            showPopover() {\r\n                clearTimeout(this._timeout);\r\n\r\n                if (!this._tether) {\r\n                    this._tether = new Tether(this.getTetherOptions());\r\n                }\r\n                this._popover.style.display = 'block';\r\n\r\n                // Make sure the popup is rendered in the correct location\r\n                this.refreshPosition();\r\n\r\n                this.$nextTick(() => {\r\n                    this.classState = true;\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Handle Popover show or hide instruction\r\n             */\r\n            togglePopover(newShowState) {\r\n                this.$emit('showChange', newShowState);\r\n                if (newShowState) {\r\n                    this.showPopover();\r\n                    this.$root.$emit('shown::popover');\r\n                } else {\r\n                    this.hidePopover();\r\n                    this.$root.$emit('hidden::popover');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Study the 'triggers' component property and apply all selected triggers\r\n             * @param {Array} triggers\r\n             * @param {Array} appliedTriggers\r\n             */\r\n            updateListeners(triggers, appliedTriggers = []) {\r\n                const newTriggers = [];\r\n                const removeTriggers = [];\r\n\r\n                // Look for new events not yet mapped (all of them on first load)\r\n                triggers.forEach(item => {\r\n                    if (appliedTriggers.indexOf(item) === -1) {\r\n                        newTriggers.push(item);\r\n                    }\r\n                });\r\n\r\n                // Disable any removed event triggers\r\n                appliedTriggers.forEach(item => {\r\n                    if (triggers.indexOf(item) === -1) {\r\n                        removeTriggers.push(item);\r\n                    }\r\n                });\r\n\r\n                // Apply trigger mapping changes\r\n                newTriggers.forEach(item => this.addListener(item));\r\n                removeTriggers.forEach(item => this.removeListener(item));\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.$root.$on('hide::popover', () => {\r\n                this.triggerState = false;\r\n            });\r\n        },\r\n\r\n        mounted() {\r\n            // Configure tether\r\n            this._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\r\n            this._popover = this.$refs.popover;\r\n            this._popover.style.display = 'none';\r\n            this._timeout = 0;\r\n\r\n            // Add listeners for specified triggers and complementary click event\r\n            this.updateListeners(this.normalizedTriggers);\r\n\r\n            // Display popover if prop is set on load\r\n            if (this.showState) {\r\n                this.showPopover();\r\n            }\r\n        },\r\n\r\n        updated() {\r\n            this.refreshPosition();\r\n        },\r\n\r\n        beforeDestroy() {\r\n            this.normalizedTriggers.forEach(item => this.removeListener(item));\r\n            clearTimeout(this._timeout);\r\n            this.destroyTether();\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\r\n    <table :class=\"['table',striped?'table-striped':'',hover?'table-hover':'']\">\r\n        <thead>\r\n        <tr>\r\n            <th @click=\"headClick(field,key)\"\r\n                :class=\"[field.sortable?'sorting':null,sortBy===key?'sorting_'+(sortDesc?'desc':'asc'):'',field.class?field.class:null]\"\r\n                v-for=\"field,key in fields\"\r\n                v-html=\"field.label\"\r\n            ></th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr v-for=\"(item,index) in _items\" :key=\"items_key\" :class=\"[item.state?'table-'+item.state:null]\" @click=\"rowClicked(item, index)\">\r\n            <td v-for=\"(field,key) in fields\" :class=\"[field.class?field.class:null]\">\r\n                <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\r\n            </td>\r\n        </tr>\r\n        <tr v-if=\"showEmpty && items.length === 0\"\r\n            :colspan=\"fields.length\"\r\n        >\r\n            <slot name=\"empty\">\r\n                <div class=\"text-center\" v-html=\"emptyText\"></div>\r\n            </slot>\r\n        </tr>\r\n        <tr v-if=\"showEmpty && items.length > 0 && _items.length === 0\"\r\n            :colspan=\"fields.length\"\r\n        >\r\n            <slot name=\"emptyfiltered\">\r\n                <div class=\"text-center\" v-html=\"emptyFilteredText\"></div>\r\n            </slot>\r\n        </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script>\r\n    import bPagination from './pagination.vue';\r\n\r\n    const toString = v => {\r\n        if (!v) {\r\n            return '';\r\n        }\r\n\r\n        if (v instanceof Object) {\r\n            return Object.keys(v).map(k => toString(v[k])).join(' ');\r\n        }\r\n\r\n        return String(v);\r\n    };\r\n\r\n    const defaultSortCompare = (a, b, sortBy) => {\r\n        return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {numeric: true});\r\n    };\r\n\r\n    export default {\r\n        components: {bPagination},\r\n        data() {\r\n            return {\r\n                sortBy: null,\r\n                sortDesc: true\r\n            };\r\n        },\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default: () => []\r\n            },\r\n            fields: {\r\n                type: Object,\r\n                default: () => {\r\n                }\r\n            },\r\n            striped: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hover: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            perPage: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            items_key: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            currentPage: {\r\n                type: Number,\r\n                default: 1\r\n            },\r\n            filter: {\r\n                type: [String, RegExp, Function],\r\n                default: null\r\n            },\r\n            sortCompare: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            itemsProvider: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            value: {\r\n                type: Array,\r\n                default: () => []\r\n            },\r\n            showEmpty: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            emptyText: {\r\n                type: String,\r\n                default: 'There are no records to show'\r\n            },\r\n            emptyFilteredText: {\r\n                type: String,\r\n                default: 'There are no records matching your request'\r\n            }\r\n        },\r\n\r\n        computed: {\r\n            _items() {\r\n                if (!this.items) {\r\n                    return [];\r\n                }\r\n\r\n                if (this.itemsProvider) {\r\n                    return this.itemsProvider(this);\r\n                }\r\n\r\n                let items = this.items.slice();\r\n\r\n                // Apply filter\r\n                if (this.filter) {\r\n                    if (this.filter instanceof Function) {\r\n                        items = items.filter(this.filter);\r\n                    } else {\r\n                        let regex;\r\n                        if (this.filter instanceof RegExp) {\r\n                            regex = this.filter;\r\n                        } else {\r\n                            regex = new RegExp('.*' + this.filter + '.*', 'ig');\r\n                        }\r\n                        items = items.filter(item => {\r\n                            const test = regex.test(toString(item));\r\n                            regex.lastIndex = 0;\r\n                            return test;\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Apply Sort\r\n                const sortCompare = this.sortCompare || defaultSortCompare;\r\n                if (this.sortBy) {\r\n                    items = items.sort((a, b) => {\r\n                        const r = sortCompare(a, b, this.sortBy);\r\n                        return this.sortDesc ? r : r * -1;\r\n                    });\r\n                }\r\n\r\n                this.$emit('input', items);\r\n\r\n                // Apply pagination\r\n                if (this.perPage) {\r\n                    items = items.slice((this.currentPage - 1) * this.perPage, this.currentPage * this.perPage);\r\n                }\r\n                return items;\r\n            }\r\n        },\r\n        methods: {\r\n            rowClicked(item, index) {\r\n                this.$emit('row-clicked', item, index);\r\n            },\r\n            headClick(field, key) {\r\n                if (!field.sortable) {\r\n                    this.sortBy = null;\r\n                    return;\r\n                }\r\n\r\n                if (key === this.sortBy) {\r\n                    this.sortDesc = !this.sortDesc;\r\n                }\r\n\r\n                this.sortBy = key;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n\r\n<style>\r\n    /* https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\r\n\r\n    table thead > tr > th.sorting_asc, table thead > tr > th.sorting_desc, table thead > tr > th.sorting,\r\n    table thead > tr > td.sorting_asc,\r\n    table thead > tr > td.sorting_desc,\r\n    table thead > tr > td.sorting {\r\n        padding-right: 30px;\r\n    }\r\n\r\n    table thead > tr > th:active,\r\n    table thead > tr > td:active {\r\n        outline: none;\r\n    }\r\n\r\n    table thead .sorting,\r\n    table thead .sorting_asc,\r\n    table thead .sorting_desc,\r\n    table thead .sorting_asc_disabled,\r\n    table thead .sorting_desc_disabled {\r\n        cursor: pointer;\r\n        position: relative;\r\n    }\r\n\r\n    table thead .sorting:before, table thead .sorting:after,\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_asc:after,\r\n    table thead .sorting_desc:before,\r\n    table thead .sorting_desc:after,\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_asc_disabled:after,\r\n    table thead .sorting_desc_disabled:before,\r\n    table thead .sorting_desc_disabled:after {\r\n        position: absolute;\r\n        bottom: 0.9em;\r\n        display: block;\r\n        opacity: 0.3;\r\n    }\r\n\r\n    table thead .sorting:before,\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_desc:before,\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_desc_disabled:before {\r\n        right: 1em;\r\n        content: \"\\2191\";\r\n    }\r\n\r\n    table thead .sorting:after,\r\n    table thead .sorting_asc:after,\r\n    table thead .sorting_desc:after,\r\n    table thead .sorting_asc_disabled:after,\r\n    table thead .sorting_desc_disabled:after {\r\n        right: 0.5em;\r\n        content: \"\\2193\";\r\n    }\r\n\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_desc:after {\r\n        opacity: 1;\r\n    }\r\n\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_desc_disabled:after {\r\n        opacity: 0;\r\n    }\r\n</style>\r\n","<template>\r\n    <component :is=\"tag\" :id=\"id || null\" class=\"tabs\">\r\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n\r\n        <div :class=\"{'card-header': card}\">\r\n            <ul :class=\"['nav','nav-' + navStyle, card ? 'card-header-'+navStyle : null]\"\r\n                role=\"tablist\"\r\n                tabindex=\"0\"\r\n                :aria-setsize=\"tabs.length\"\r\n                :aria-posinset=\"currentTab + 1\"\r\n                @keydown.left=\"previousTab\"\r\n                @keydown.up=\"previousTab\"\r\n                @keydown.right=\"nextTab\"\r\n                @keydown.down=\"nextTab\"\r\n                @keydown.shift.left=\"setTab(-1,false,1)\"\r\n                @keydown.shift.up=\"setTab(-1,false,1)\"\r\n                @keydown.shift.right=\"setTab(tabs.length,false,-1)\"\r\n                @keydown.shift.down=\"setTab(tabs.length,false,-1)\"\r\n            >\r\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\" role=\"presentation\">\r\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                       :href=\"tab.href\"\r\n                       role=\"tab\"\r\n                       :aria-selected=\"tab.localActive ? 'true' : 'false'\"\r\n                       :aria-controls=\"tab.id || null\"\r\n                       :id=\"tab.controlledBy || null\"\r\n                       @click.prevent.stop=\"setTab(index)\"\r\n                       @keydown.space.prevent.stop=\"setTab(index)\"\r\n                       @keydown.enter.prevent.stop=\"setTab(index)\"\r\n                       tabindex=\"-1\"\r\n                       v-if=\"!tab.headHtml\"\r\n                       v-html=\"tab.title\"\r\n                    ></a>\r\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                         role=\"heading\"\r\n                         tabindex=\"-1\"\r\n                         v-else\r\n                         v-html=\"tab.headHtml\"></div>\r\n                </li>\r\n                <slot name=\"tabs\"></slot>\r\n            </ul>\r\n        </div>\r\n\r\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    import observeDom from '../utils/observe-dom';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                currentTab: this.value,\r\n                tabs: []\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            tag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n            noFade: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            card: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            small: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            value: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n            pills: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            lazy: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            bottom: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            currentTab(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\r\n                this.$emit('input', val);\r\n                this.tabs[val].$emit('click');\r\n            },\r\n            value(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.setTab(val);\r\n            },\r\n            fade(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.tabs.forEach(item => {\r\n                    this.$set(item, 'fade', val);\r\n                });\r\n            }\r\n        },\r\n        computed: {\r\n            fade() {\r\n                return !this.noFade;\r\n            },\r\n            navStyle() {\r\n                return this.pills ? 'pills' : 'tabs';\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * Util: Return the sign of a number (as -1, 0, or 1)\r\n             */\r\n            sign(x) {\r\n                return (x === 0) ? 0 : (x > 0 ? 1 : -1);\r\n            },\r\n\r\n            /**\r\n             * Move to next tab\r\n             */\r\n            nextTab() {\r\n                this.setTab(this.currentTab, false, 1);\r\n            },\r\n\r\n            /**\r\n             * Move to previous tab\r\n             */\r\n            previousTab() {\r\n                this.setTab(this.currentTab, false, -1);\r\n            },\r\n\r\n            /**\r\n             * Set active tab on the tabs collection and the child 'tab' component\r\n             */\r\n            setTab(index, force, offset) {\r\n                offset = offset || 0;\r\n\r\n                // Prevent setting same tab!\r\n                if (!force && (index + offset) === this.currentTab) {\r\n                    return;\r\n                }\r\n\r\n                const tab = this.tabs[index + offset];\r\n\r\n                // Don't go beyond indexes!\r\n                if (!tab) {\r\n                    return;\r\n                }\r\n\r\n                // Ignore or Skip disabled\r\n                if (tab.disabled) {\r\n                    if (offset) {\r\n                        // Skip to next non disabled tab in offset direction (recursive)\r\n                        this.setTab(index, force, offset + this.sign(offset));\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // Deactivate previous active tab\r\n                if (this.tabs[this.currentTab]) {\r\n                    this.$set(this.tabs[this.currentTab], 'localActive', false);\r\n                }\r\n\r\n                // Set new tab as active\r\n                this.$set(tab, 'localActive', true);\r\n\r\n                // Update currentTab\r\n                this.currentTab = index + offset;\r\n            },\r\n\r\n            /**\r\n             * Dynamically update tabs\r\n             */\r\n            updateTabs() {\r\n                // Probe tabs\r\n                if (this.$slots.default) {\r\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\r\n                        .map(tab => tab.componentInstance);\r\n                } else {\r\n                    this.tabs = [];\r\n                }\r\n\r\n                this.tabs.forEach(tab => {\r\n                    this.$set(tab, 'fade', this.fade);\r\n                    this.$set(tab, 'lazy', this.lazy);\r\n                });\r\n\r\n                // Set initial active tab\r\n                let tabIndex = this.currentTab;\r\n\r\n                if (this.currentTab === null || this.currentTab === undefined) {\r\n                    this.tabs.forEach((tab, index) => {\r\n                        if (tab.active) {\r\n                            tabIndex = index;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Workaround to fix problem when currentTab is removed\r\n                let offset = 0;\r\n                if (tabIndex > this.tabs.length - 1) {\r\n                    offset = -1;\r\n                }\r\n\r\n                this.setTab(tabIndex || 0, true, offset);\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTabs();\r\n\r\n            // Observe Child changes so we can notify tabs change\r\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\r\n        <component :is=\"tag\"\r\n                   :id=\"id || null\"\r\n                   role=\"tabpanel\"\r\n                   :class=\"['tab-pane', {show, fade, disabled, active: localActive}]\"\r\n                   :aria-hidden=\"localActive ? 'false' : 'true'\"\r\n                   :aria-expanded=\"localActive ? 'true' : 'false'\"\r\n                   :aria-lablelledby=\"controlledBy || null\"\r\n                   v-if=\"localActive || !lazy\"\r\n                   v-show=\"localActive || lazy\"\r\n                   ref=\"panel\"\r\n        >\r\n             <slot></slot>\r\n        </component>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        methods: {\r\n            enter() {\r\n                this.show = true;\r\n            },\r\n            beforeLeave() {\r\n                this.show = false;\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                fade: false,\r\n                localActive: false,\r\n                lazy: true,\r\n                show: false\r\n            };\r\n        },\r\n        computed: {\r\n            controlledBy() {\r\n                return this.buttonId || (this.id ? (this.id + '__BV_tab_button__') : null);\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            tag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n            buttonId: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            headHtml: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            active: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            href: {\r\n                type: String,\r\n                default: '#'\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div tabindex=\"-1\" :class=\"['tooltip','tooltip-' + this.placement]\"\n             ref=\"popover\" @focus=\"$emit('focus')\" @blur=\"$emit('blur')\"\n             :style=\"{opacity:showState?1:0}\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content || title\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block !important;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import bPopover from './popover.vue';\n\n    export default {\n        extends: bPopover,\n        props: {\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('collapse::toggle', target);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('show::modal', target, el);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["observeDOM","el","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","obs","mutations","addedNodes","length","removedNodes","observe","Object","assign","childList","subtree","targets","binding","listen_types","fn","vm","__vue__","console","warn","keys","modifiers","filter","t","all_listen_types","value","push","listener","forEach","type","isElement","obj","nodeType","closest","element","selector","$QSA","document","Array","prototype","slice","call","querySelectorAll","$QS","querySelector","getVm","toType","toString","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","hasOwnProperty","expectedTypes","valueType","RegExp","test","error","ScrollSpy","this","_$el","_selector","Selector","NAV_LINKS","LIST_ITEMS","DROPDOWN_ITEMS","join","_config","Default","_offsets","_targets","_activeTarget","_scrollHeight","_$root","_resizeTimeout","updateConfig","render","data","countDownTimerId","dismissed","created","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","props","String","default","Boolean","dismissLabel","Number","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","let","dismissCountDown","setInterval","isRouterLink","$router","to","disabled","_href","href","linkClassObject","active","exact","exactActiveClass","activeClass","tag","append","replace","event","linkClick","e","$root","preventDefault","stopPropagation","mixins","linkMixin","components","bLink","componentType","items2","last","items","map","item","text","link","__active","required","onclick","btnVariant","btnSize","btnBlock","btnDisabled","inactive","block","size","ITEM_SELECTOR","justify","vertical","KeyNav","setItemFocus","$nextTick","focus","focusNext","prev","keyNav","getItems","index","indexOf","target","focusFirst","focusLast","$el","tabIndex","documentElement","_clickOutListener","destroyed","removeEventListener","contains","clickOutListener","split","dropup","right","visible","$on","old","children","body","noop","toggle","onTab","onEsc","$refs","button","up","menu","clickOut","dropdown","dropdownToggle","caret","id","left","blockClass","overlay","cardVariant","cardInverse","inverse","cardAlign","align","header","showHeader","headerTag","footer","showFooter","footerTag","title","subTitle","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","isSliding","slides","labelPrev","labelNext","labelGotoSlide","labelIndicators","interval","indicators","controls","height","background","pause","_intervalId","start","slide","restart","relatedTarget","focusActiveIndicator","focusPrevIndicator","idx","activeElement","focusNextIndicator","classList","add","n","setAttribute","val","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","setTimeout","remove","clearTimeout","contentVisibleUp","caption","contentClasses","classes","carousel-caption","navbar-collapse","isNav","emitState","enter","style","realHeight","getComputedStyle","offsetHeight","leave","clearHeight","bButton","toggleText","click","selected","displayItem","returnObject","model","forceDefault","defaultText","result","list","position","select","hub","inline","labelId","label","descriptionId","description","feedbackId","feedback","describedBy","i","inputState","labelLayout","labelSrOnly","horizontal","labelSize","labelAlignClass","labelTextAlign","inputLayout","updateTarget","content","input","inputSelector","updated","inputClass","custom","plain","name","checkboxClass","custom-control","form-check-inline","inBrowser","UNSAFE_UID","process","env","_id","_uid","formMixin","formCheckBoxMixin","generateId","prop","uncheckedValue","checked","formOptions","options","isArray","option","valueField","textField","selectedValue","localValue","old_value","formOptionsMixin","stacked","staticValue","formatter","Function","bFormInputStatic","rowsCount","format","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","static","placeholder","rows","textarea","selectedFile","dragging","selectedLabel","multiple","selectedFormat","file","computedChooseLabel","chooseLabel","newVal","onFileChange","dataTransfer","noTraverse","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","setFiles","concat","apply","files","filesArray","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","action","myTag","verticalAlignClass","verticalAlign","rightAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","hide","fade","closeTitle","okTitle","closeOnBackdrop","closeOnEsc","hideHeader","hideFooter","okOnly","hideHeaderClose","enforceFocus","isOK","canceled","cancel","returnFocusTo","onClickOut","triggerEl","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","toggleState","fixed","sticky","toggleable","toggleBreakpoint","diff","showPrev","showNext","currentPage","numberOfPages","Math","ceil","totalRows","perPage","pageLinks","limit","isActive","page","secondaryVariant","getButtons","buttons","buttonPrev","buttonFirst","buttonPages","buttonLast","buttonNext","setBtnFocus","btn","find","reverse","focusCurrent","parseInt","getAttribute","focusPrev","cnt","_return","newPage","oldPage","newValue","oldValue","ariaLabel","labelPrevPage","labelNextPage","labelPage","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","TETHER_CLASS_PREFIX","TETHER_CLASSES","enabled","TRANSITION_DURATION","constraints","debounce","validator","delay","offset","placement","popoverStyle","targetOffset","triggers","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","getDelay","_timeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","className","timeStamp","getTetherOptions","attachment","_popover","classPrefix","hidePopover","display","refreshPosition","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","beforeDestroy","progressVariant","striped","animated","styleObject","width","progress","p","pow","precision","round","max","showProgress","showValue","v","k","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","bPagination","sortDesc","fields","items_key","sortCompare","itemsProvider","showEmpty","emptyText","emptyFilteredText","_items","regex","lastIndex","sort","r","rowClicked","headClick","field","key","sortable","currentTab","noFade","card","small","lazy","setTab","$set","navStyle","sign","x","nextTab","previousTab","force","tab","updateTabs","$slots","componentInstance","observeDom","tabsContainer","bind","beforeLeave","localActive","controlledBy","buttonId","headHtml","extends","bPopover","ref","isServer","Element","s","matches","ownerDocument","parentElement","NAME","EVENT","BVSS","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","DROPDOWN_TOGGLE","NAV_LINK","LIST_ITEM","ACTIVE","NAV_LIST_GROUP","NAV","LIST_GROUP","DROPDOWN","OffsetMethod","OFFSET","POSITION","arg","listen","scroller","_getScroller","tagName","unListen","refresh","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","charAt","bcr","getBoundingClientRect","offsetTop","scrollTop","scrollHeight","maxScroll","_getOffsetHeight","_activate","_clear","isActiveTarget","dispose","handleEvent","resizeThrottle","self","pageYOffset","innerHeight","queries","links","_setActiveState","_setParentsSiblingActiveState","$props","previousElementSibling","inserted","update","componentUpdated","unbind","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}